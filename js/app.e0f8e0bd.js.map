{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/MainMenu.vue?6ee5","webpack:///./src/App.vue?0ded","webpack:///./src/views/Done.vue?2e2f","webpack:///./src/views/General.vue?65a3","webpack:///./src/views/Verify.vue?70cb","webpack:///./src/App.vue?86cf","webpack:///./src/App.vue?d5df","webpack:///./src/App.vue","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?64a4","webpack:///./src/views/General.vue","webpack:///./src/views/General.vue?bf64","webpack:///./src/views/General.vue?be15","webpack:///./src/views/CustomAdler.vue","webpack:///./src/utils/textToSVG.ts","webpack:///./src/utils/pseudoCustomAdler.ts","webpack:///./src/views/CustomAdler.vue?7087","webpack:///./src/views/CustomAdler.vue?ced4","webpack:///./src/views/MainMenu.vue","webpack:///./src/utils/logo.ts","webpack:///./src/views/MainMenu.vue?2c56","webpack:///./src/views/MainMenu.vue?d301","webpack:///./src/views/Verify.vue","webpack:///./src/utils/index.ts","webpack:///./src/utils/overview.ts","webpack:///./src/utils/gitHubSocialPreview.ts","webpack:///./src/utils/steam.ts","webpack:///./src/views/Verify.vue?da56","webpack:///./src/views/Verify.vue?51a2","webpack:///./src/views/Done.vue","webpack:///./src/utils/const.ts","webpack:///./src/utils/modCPP.ts","webpack:///./src/utils/aff.ts","webpack:///./src/views/Done.vue?5802","webpack:///./src/views/Done.vue?be35","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/views/CustomAdler.vue?a057"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","steps","step","id","to","style","text","stepClasses","icon","values","previous","next","general","done","main_menu","custom_adler","verify","fullName","gitHubRepo","description","authors","uploadedAdler","mainMenuLogo","fontSize","currentStep","created","this","$router","afterEach","path","substr","keys","indexOf","index","previousStep","nextStep","App","render","__scopeId","href","target","type","placeholder","author","addAuthor","a","removeAuthor","descriptionPlaceholder","rows","filter","x","required","General","src","previewURL","$refs","input","click","accept","onAdlerFileChanged","ref","loadFont","Promise","resolve","reject","load","err","instance","Error","textToSVG","options","then","getPath","metrics","getMetrics","SHADOW_OFFSET","BOX_HEIGHT","MIN_BOX_WIDTH","ADLER_HEIGHT","ADLER_WIDTH","ADLER","generatePseudoCustomAdler","textSVG","generateText","svgString","Blob","width","height","toUpperCase","trim","svgOptions","anchor","attributes","fill","transform","boxWidth","Math","max","rotate","boxX","boxY","boxShadow","box","y","redrawPreview","beforeUnmount","URL","revokeObjectURL","e","files","Array","from","logo","createObjectURL","CustomAdler","EYE_PATH","BACKGROUND_PATH","BEAK_PATH","DEFAULT_LOGO_TEXT_SIZE","LOGO_SIZE","TOP_LINE_Y","BOTTOM_LINE_Y","generateLogo","lines","split","map","textPaths","line1","line2","path1","path2","line","join","active","deep","ManinMenu","urls","logoActive","logoSmall","overview","steam","github","download","blob","url","link","document","createElement","body","appendChild","removeChild","remove","setTimeout","blobToImage","img","Image","waitOnImageLoad","decoding","loaded","onload","onerror","decode","catch","BACKGROUND_COLOR","OVERVIEW_WIDTH","OVERVIEW_HEIGHT","generateOverview","adler","canvas","ctx","getContext","strokeStyle","fillStyle","fillRect","drawable","factor","drawImage","toBlob","finally","IMAGE_WIDTH","IMAGE_HEIGHT","generateGitHubSocialPreview","IMAGE_SIZE","ADLER_SIZE","generateSteamLogo","drawableSize","setup","customAdler","fetch","res","Verify","state","hemttFilesExample","NAMES","OVERVIEW_PREFIX","generateModCPP","Map","prefixedName","set","content","entries","encodeAttributeValue","isArray","NULL_POINTER","AFF_EXCEPTION_MSGS","code","message","instantiateWA","response","importObject","undefined","WebAssembly","instantiateStreaming","arrayBuffer","bytes","instantiate","source","memory","Memory","initial","maximum","dataView","DataView","buffer","ready","env","__sys_stat64","pathPtr","bufferPtr","setErrNo","emscripten_notify_memory_growth","updateViews","wasi_snapshot_preview1","fd_read","fd","iov","iovCount","pnum","fd_close","fd_seek","offsetLow","offsetHigh","whence","newOffset","fd_write","environ_sizes_get","penvironCountPtr","penvironBufferSizePtr","setInt32","environ_get","environ","environBufferPtr","proc_exit","exitCode","func","exit","malloc","size","ptr","free","writeBufferToMemory","byteLength","arr","Uint8Array","setUint8","getBytesFromMemory","errno","__errno_location","getLastAFFException","num","get_last_aff_exception","encode","imageData","sizePtr","imageDataPtr","getUint32","output","success","free_encoded_data","outputSizePtr","widthPtr","heightPtr","dataPtr","getUint16","image","ImageData","Uint8ClampedArray","init","Request","toString","initObj","AFF","affPromise","promise","steamLogo","githubSocialPreview","modCPP","zip","file","generateAsync","customAdlerPromise","all","convertToPAA","f","blobToImageData","getImageData","Done","routes","redirect","component","MainMenu","router","history","mutations","actions","use","store","mount"],"mappings":"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","file":"js/app.e0f8e0bd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MainMenu.vue?vue&type=style&index=0&id=3eaf811c&lang=scss&scoped=true\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=4e440847&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Done.vue?vue&type=style&index=0&id=6d6ce524&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./General.vue?vue&type=style&index=0&id=502eec4a&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Verify.vue?vue&type=style&index=0&id=9a450e98&lang=scss&scoped=true\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=1&id=4e440847&lang=scss&scoped=true\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=2&id=4e440847&lang=scss\"","<template>\n    <div class=\"steps\">\n        <template v-for=\"(step, id) of steps\" :key=\"id\">\n            <router-link\n                :to=\"`/${id}`\"\n                :style=\"`--step-text: '${step.text}';`\"\n                :class=\"stepClasses(id)\"\n            >\n                <span class=\"material-icons\">{{ step.icon }}</span>\n            </router-link>\n            <div class=\"steps__line\"></div>\n        </template>\n    </div>\n    <router-view :values=\"values\"></router-view>\n    <div class=\"buttons\">\n        <button v-if=\"previousShown\" @click=\"previous\">Zurück</button>\n        <button v-if=\"nextShown\"  @click=\"next\">Weiter</button>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\n\ninterface Step {\n    icon: string;\n    text: string;\n    done: boolean;\n}\n\n@Options({})\nexport default class App extends Vue {\n    private steps: { [key: string]: Step|undefined } = {\n        general: {\n            icon: 'edit',\n            text: 'Allgemeines',\n            done: false\n        },\n        main_menu: {\n            icon: 'image',\n            text: 'Hauptmenü',\n            done: false\n        },\n        custom_adler: {\n            icon: 'add_photo_alternate',\n            text: 'Adler',\n            done: false\n        },\n        verify: {\n            icon: 'rule',\n            text: 'Überprüfen',\n            done: false\n        },\n        done: {\n            icon: 'check',\n            text: 'Fertig',\n            done: false\n        }\n    };\n\n    private values: Values = {\n        fullName: '',\n        gitHubRepo: '',\n        description: '',\n        authors: [] as string[],\n        uploadedAdler: null,\n        mainMenuLogo: {\n            text: '',\n            fontSize: 27\n        }\n    };\n\n    private currentStep = 'general';\n\n    public created (): void {\n        this.$router.afterEach((to) => {\n            this.currentStep = to.path.substr(1);\n        });\n    }\n\n    private stepClasses (id: string): string {\n        if (this.currentStep === id) return 'steps--active';\n        if (this.steps[id]?.done) return 'steps--done';\n\n        return '';\n    }\n\n    private get previousShown (): boolean {\n        const keys = Object.keys(this.steps);\n        return keys.indexOf(this.currentStep) !== 0;\n    }\n\n    private get nextShown (): boolean {\n        const keys = Object.keys(this.steps);\n        return keys.indexOf(this.currentStep) !== keys.length - 1;\n    }\n\n    private previous () {\n        const keys = Object.keys(this.steps);\n        const index = keys.indexOf(this.currentStep);\n        const previousStep = keys[index - 1];\n        this.$router.push(previousStep);\n    }\n\n    private next () {\n        const keys = Object.keys(this.steps);\n        const index = keys.indexOf(this.currentStep);\n        const nextStep = keys[index + 1];\n        this.$router.push(nextStep);\n    }\n}\n</script>\n\n<style lang=\"scss\">\nbody, html {\n    margin: 0;\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n    font-family: Soruce Sans Pro, sans-serif;\n\n    --color-text: 0, 0, 0;\n    --color-primary: 47, 128, 237;\n    --color-background: 255, 255, 255;\n}\n\nh1, h2, h3, h4, h5, h6 {\n    font-family: Oswald, sans-serif;\n}\n\ntextarea, input, pre, code {\n    font-family: Source Code Pro, monospace;\n}\n\n#app {\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    height: 100vh;\n    width: 100vw;\n    padding: 2rem;\n    box-sizing: border-box;\n    justify-content: center;\n    justify-items: center;\n    row-gap: 1rem;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    > *:nth-child(2) {\n        width: 40rem;\n        box-sizing: border-box;\n        padding: 0 1rem;\n        max-width: 100vw;\n        overflow-y: auto;\n    }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.buttons {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n\n    > * {\n        font-size: 1.25rem;\n    }\n}\n\n.steps {\n    $textLineHeihgt: 2rem;\n\n    display: flex;\n    align-items: center;\n    margin-bottom: 2rem;\n    max-width: calc(100vw - 3rem);\n\n    > a {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 1rem;\n        border-radius: 50%;\n        width: 1.2em;\n        height: 1.2em;\n        --step-color: grey;\n\n        background-color: var(--step-color);\n        color: white;\n        text-decoration: none;\n\n        &::before {\n            content: var(--step-text, '');\n            display: block;\n            position: absolute;\n            top: 100%;\n            color: var(--step-color);\n            line-height: $textLineHeihgt;\n\n            @media (max-width: 600px) {\n                color: transparent;\n            }\n        }\n\n        &.steps--active {\n            --step-color: #2F80ED;\n\n            @media (max-width: 600px) {\n                &::before {\n                    color: var(--step-color);\n                }\n            }\n        }\n\n        &.steps--done {\n            --step-color: #66AA66;\n        }\n\n    }\n    &__line {\n        display: flex;\n        content: '';\n        width: 6rem;\n        height: 2px;\n        background-color: grey;\n\n        &:last-child {\n            display: none;\n        }\n    }\n}\n</style>\n\n<style lang=\"scss\">\n.form-field {\n    display: flex;\n    flex-direction: column;\n    row-gap: .125rem;\n    margin-bottom: 1.5rem;\n\n    > * {\n        transition: background-color .1s ease-in-out;\n    }\n\n    &:focus-within {\n        > label, > small {\n            color: rgba(var(--color-text), 1);\n        }\n    }\n}\n\nlabel {\n    font-size: 1.125rem;\n}\n\nlabel, small {\n    color: rgba(var(--color-text), 0.7);\n}\n\ntextarea, input {\n    border: none;\n    outline: none;\n    border-radius: .25rem;\n    padding: .5rem;\n    color: rgba(var(--color-text), 1);\n    background-color: rgba(var(--color-text), .05);\n\n    &:focus {\n        background-color: rgba(var(--color-text), .1);\n    }\n\n    &::placeholder {\n        color: rgba(var(--color-text), 0.4);\n    }\n}\n\nbutton {\n    border: none;\n    outline: none;\n    border-radius: .25em;\n    background-color: rgba(var(--color-primary), 1);\n    color: rgba(var(--color-background), 1);\n    cursor: pointer;\n    font-weight: bold;\n    padding: .5em 1em;\n    transition: background-color .1s ease-in-out;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: .25rem;\n    font-size: 1.05rem;\n\n    &:hover,\n    &:focus {\n        background-color: rgba(var(--color-primary), .8);\n    }\n}\n</style>\n","\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\n\ninterface Step {\n    icon: string;\n    text: string;\n    done: boolean;\n}\n\n@Options({})\nexport default class App extends Vue {\n    private steps: { [key: string]: Step|undefined } = {\n        general: {\n            icon: 'edit',\n            text: 'Allgemeines',\n            done: false\n        },\n        main_menu: {\n            icon: 'image',\n            text: 'Hauptmenü',\n            done: false\n        },\n        custom_adler: {\n            icon: 'add_photo_alternate',\n            text: 'Adler',\n            done: false\n        },\n        verify: {\n            icon: 'rule',\n            text: 'Überprüfen',\n            done: false\n        },\n        done: {\n            icon: 'check',\n            text: 'Fertig',\n            done: false\n        }\n    };\n\n    private values: Values = {\n        fullName: '',\n        gitHubRepo: '',\n        description: '',\n        authors: [] as string[],\n        uploadedAdler: null,\n        mainMenuLogo: {\n            text: '',\n            fontSize: 27\n        }\n    };\n\n    private currentStep = 'general';\n\n    public created (): void {\n        this.$router.afterEach((to) => {\n            this.currentStep = to.path.substr(1);\n        });\n    }\n\n    private stepClasses (id: string): string {\n        if (this.currentStep === id) return 'steps--active';\n        if (this.steps[id]?.done) return 'steps--done';\n\n        return '';\n    }\n\n    private get previousShown (): boolean {\n        const keys = Object.keys(this.steps);\n        return keys.indexOf(this.currentStep) !== 0;\n    }\n\n    private get nextShown (): boolean {\n        const keys = Object.keys(this.steps);\n        return keys.indexOf(this.currentStep) !== keys.length - 1;\n    }\n\n    private previous () {\n        const keys = Object.keys(this.steps);\n        const index = keys.indexOf(this.currentStep);\n        const previousStep = keys[index - 1];\n        this.$router.push(previousStep);\n    }\n\n    private next () {\n        const keys = Object.keys(this.steps);\n        const index = keys.indexOf(this.currentStep);\n        const nextStep = keys[index + 1];\n        this.$router.push(nextStep);\n    }\n}\n","import { render } from \"./App.vue?vue&type=template&id=4e440847&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4e440847&lang=scss\"\nimport \"./App.vue?vue&type=style&index=1&id=4e440847&lang=scss&scoped=true\"\nimport \"./App.vue?vue&type=style&index=2&id=4e440847&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-4e440847\"\n\nexport default script","<template>\n    <form>\n        <div class=\"form-field\">\n            <label>Modname in langer Form</label>\n            <input type=\"text\" placeholder=\"Sling Helmet\" v-model=\"values.fullName\"/>\n            <small>Ohne \"Gruppe Adler\" / \"GRAD\"<br/>Keine Abkürzung (also \"Civilians\" und nicht \"Civs\")<br/>Leerzeichen bei mehreren Wörtern</small>\n        </div>\n        <div class=\"form-field\">\n            <label>Autoren</label>\n            <div style=\"display: grid; grid-template-columns: 1fr auto; grid-gap: .25rem;\">\n                <input type=\"text\" placeholder=\"DerZade\" v-model=\"author\" @keydown.enter=\"addAuthor\" />\n                <button @click=\"addAuthor\" type=\"button\">Hinzufügen</button>\n            </div>\n            <ul v-if=\"values.authors.length > 0\">\n                <li v-for=\"(a, i) in values.authors\" :key=\"i\">\n                    <span style=\"vertical-align: middle;\">{{ a }}</span>\n                    <span @click=\"removeAuthor(a)\" class=\"material-icons\" style=\"color: rgba(var(--color-primary), 1); cursor: pointer; vertical-align: middle; margin-left: .25rem;\">delete</span>\n                </li>\n            </ul>\n            <i v-else>Keine Autoren hinzugefügt</i>\n        </div>\n        <div class=\"form-field\">\n            <label>GitHub Repository Name</label>\n            <input type=\"text\" placeholder=\"grad_slingHelmet\" v-model=\"values.gitHubRepo\" />\n            <small>Nur Repository Name (<pre style=\"display: inline\">github.com/gruppe-adler/</pre> wird automatisch vorgestellt)</small>\n        </div>\n        <div class=\"form-field\">\n            <label>Kurzbeschreibung</label>\n            <textarea :placeholder=\"descriptionPlaceholder\" rows=\"5\" v-model=\"values.description\"></textarea>\n            <small>Anfangend mit <i>\"Gruppe Adler\"</i> + Modname in langer Form<br/>(z.B.: \"Gruppe Adler Sling Helmet is da SHIT.\")<br/>unterstützt <a href=\"https://community.bistudio.com/wiki/Structured_Text\" target=\"_blank\">Structured Text</a></small>\n        </div>\n    </form>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop } from 'vue-property-decorator';\n\n@Options({})\nexport default class General extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private author = '';\n\n    /**\n     * Callback of \"add\"-button or KeyDown.Enter of\n     * author input\n     */\n    private addAuthor () {\n        this.values.authors.push(this.author);\n        this.author = '';\n    }\n\n    /**\n     * Remove author from list\n     * @param {string} author Author to remove\n     */\n    private removeAuthor (author: string) {\n        this.values.authors = this.values.authors.filter(x => x !== author);\n    }\n\n    private get descriptionPlaceholder () {\n        if (this.values.fullName.length === 0) return 'Gruppe Adler Sling Helmet...';\n\n        return `Gruppe Adler ${this.values.fullName}...`;\n    }\n}\n</script>\n\n<style scoped>\nform {\n    display: flex;\n    flex-direction: column;\n}\n</style>\n","\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop } from 'vue-property-decorator';\n\n@Options({})\nexport default class General extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private author = '';\n\n    /**\n     * Callback of \"add\"-button or KeyDown.Enter of\n     * author input\n     */\n    private addAuthor () {\n        this.values.authors.push(this.author);\n        this.author = '';\n    }\n\n    /**\n     * Remove author from list\n     * @param {string} author Author to remove\n     */\n    private removeAuthor (author: string) {\n        this.values.authors = this.values.authors.filter(x => x !== author);\n    }\n\n    private get descriptionPlaceholder () {\n        if (this.values.fullName.length === 0) return 'Gruppe Adler Sling Helmet...';\n\n        return `Gruppe Adler ${this.values.fullName}...`;\n    }\n}\n","import { render } from \"./General.vue?vue&type=template&id=502eec4a&scoped=true\"\nimport script from \"./General.vue?vue&type=script&lang=ts\"\nexport * from \"./General.vue?vue&type=script&lang=ts\"\n\nimport \"./General.vue?vue&type=style&index=0&id=502eec4a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-502eec4a\"\n\nexport default script","<template>\n    <div style=\"display: flex; flex-direction: column;\">\n        <label>Vorschau</label>\n        <img :src=\"previewURL\">\n        <button v-if=\"values.uploadedAdler === null\" @click=\"$refs.input.click()\">\n            <span class=\"material-icons\">add_photo_alternate</span>\n            <span>Eigenen Adler hochladen</span>\n        </button>\n        <button v-else @click=\"values.uploadedAdler = null;\">\n            <span class=\"material-icons\">delete</span>\n            <span>Eigenen Adler entfernen</span>\n        </button>\n        <p>Dein Adler sollte folgende Anforderungen erfüllen:</p>\n        <ul>\n            <li>Transparenter Hintergrund</li>\n            <li>Schriftzug im Bild zentriert</li>\n            <li>Höhe mindestens 960px</li>\n            <li>Oben und unten keine Ränder</li>\n        </ul>\n        <p><i>Der Adler oben dient als gutes Beispiel all dieser Anforderungen.</i></p>\n        <input type=\"file\" accept=\"image/*\" @change=\"onAdlerFileChanged\" style=\"visibility: hidden; height: 0;\" ref=\"input\" />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop, Watch } from 'vue-property-decorator';\nimport { generatePseudoCustomAdler } from '@/utils/pseudoCustomAdler';\n\n@Options({})\nexport default class CustomAdler extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private previewURL: string|null = null;\n\n    public created (): void {\n        this.redrawPreview();\n    }\n\n    public beforeUnmount (): void {\n        if (this.previewURL) URL.revokeObjectURL(this.previewURL);\n    }\n\n    private onAdlerFileChanged (e: Event) {\n        const input = e.target as HTMLInputElement;\n        if (!input.files) return;\n\n        const files = Array.from(input.files);\n        if (files.length === 0) return;\n\n        this.values.uploadedAdler = files[0];\n    }\n\n    @Watch('values.fullName')\n    @Watch('values.uploadedAdler')\n    private async redrawPreview () {\n        const logo = this.values.uploadedAdler ?? await generatePseudoCustomAdler(this.values.fullName);\n\n        if (this.previewURL !== null) URL.revokeObjectURL(this.previewURL);\n        this.previewURL = URL.createObjectURL(logo);\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nimg {\n    $checkColor: rgba(var(--color-text), 0.1);\n\n    width: 100%;\n    max-width: 30rem;\n    align-self: center;\n    margin-top: 1rem;\n    margin-bottom: 2rem;\n    background-image:\n        linear-gradient(45deg, $checkColor 25%, transparent 25%),\n        linear-gradient(-45deg, $checkColor 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, $checkColor 75%),\n        linear-gradient(-45deg, transparent 75%, $checkColor 75%);\n    background-size: 20px 20px;\n    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n}\n\nul {\n    margin: 0;\n}\n\nli {\n    margin: .25rem 0;\n}\n</style>\n","import TextToSVG from 'text-to-svg';\n\nconst loadFont = new Promise<TextToSVG>((resolve, reject) => {\n    TextToSVG.load('/Oswald-Medium.ttf', (err, instance) => {\n        if (err) {\n            reject(err);\n            return;\n        }\n\n        if (instance === null) {\n            reject(new Error('Instance is null'));\n            return;\n        }\n\n        resolve(instance);\n    });\n});\n\nexport function textToSVG (text: string, options: TextToSVG.GenerationOptions): Promise<{ metrics: TextToSVG.Metrics, path: string }> {\n    return loadFont.then(instance => {\n        const path = instance.getPath(text, options);\n        const metrics = instance.getMetrics(text, options);\n        return { path, metrics };\n    });\n}\n","import TextToSVG from 'text-to-svg';\nimport { textToSVG } from './textToSVG';\n\nconst SHADOW_OFFSET = 16;\nconst BOX_HEIGHT = 256;\nconst MIN_BOX_WIDTH = 1536;\n\nconst ADLER_HEIGHT = 2048;\nconst ADLER_WIDTH = 2121;\n\nconst ADLER = `\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1391.07 1263.22C1361.23 1210.6 1321.9 1173.97 1321.9 1173.97C1321.9 1173.97 1287.99 1097.47 1280.66 1076.04C1273.34 1054.88 1330.31 1086.89 1330.31 1086.89C1330.31 1086.89 1286.36 1028.03 1264.12 1012.83C1260.59 997.371 1242.14 933.35 1242.14 933.35C1242.14 933.35 1260.05 935.791 1272.52 940.674C1271.98 928.738 1225.86 879.365 1225.86 879.365L1217.73 826.195C1217.73 826.195 1231.56 827.009 1246.21 839.216C1243.23 823.482 1213.11 796.897 1204.16 787.131C1198.45 719.988 1174.48 618.239 1158.14 572.359C1162.11 569.805 1166.11 567.223 1170.03 564.667L1170.8 565.767C1197.38 633.044 1210.94 704.391 1220.44 778.992C1259.23 808.019 1285.55 858.748 1300.74 896.185C1282.56 876.11 1254.08 864.174 1240.24 853.051C1241.87 859.291 1243.23 865.53 1244.85 872.041C1292.06 915.174 1318.64 965.632 1336.28 1009.31C1314.57 985.435 1281.75 968.616 1266.56 957.222C1268.73 965.361 1270.9 973.77 1273.34 982.18C1317.83 1035.89 1370.19 1105.34 1393.79 1163.94C1362.05 1128.94 1324.07 1108.32 1306.16 1097.74C1307.79 1102.9 1309.15 1107.78 1310.78 1112.94C1358.79 1176.14 1439.63 1287.1 1472.73 1368.48C1429.87 1321.28 1384.83 1285.74 1363.4 1274.62C1384.29 1334.57 1385.92 1430.87 1378.87 1486.22C1378.59 1488.11 1380.22 1489.47 1382.12 1488.93C1397.31 1484.59 1456.72 1465.87 1506.37 1422.19C1588.02 1468.58 1665.06 1485.67 1723.12 1493C1725.56 1493.27 1727.19 1490.56 1725.83 1488.66C1702.77 1456.37 1579.34 1284.11 1582.6 1278.42C1592.36 1261.33 1612.71 1214.67 1612.71 1214.67C1686.77 1320.19 1807.21 1383.94 1936.34 1385.57C1938.78 1385.57 1940.14 1382.86 1938.78 1380.96C1908.4 1338.91 1675.92 1015.82 1677.27 1008.77C1682.97 980.823 1698.43 952.339 1701.14 922.499L1793.11 1053.53C1867.44 1159.32 1987.89 1222.8 2117.01 1224.7C2119.46 1224.7 2120.81 1221.99 2119.46 1220.09L1410.06 204.153C1400.57 190.589 1380.22 191.674 1372.08 205.781C1372.08 205.781 1315.66 296.659 1355.81 375.872C1427.97 519.107 1394.87 646.066 1330.85 657.46C1287.22 665.224 1234.9 608.236 1185.05 554.831C1203.78 542.484 1218.27 532.671 1218.27 532.671C1218.27 532.671 1202.54 476.517 1197.11 466.751C1191.96 456.985 1185.99 447.49 1178.66 438.809C1171.88 430.942 1164.01 423.075 1153.71 417.921C1144.48 396.218 1131.46 375.873 1114.64 358.782C1111.11 355.255 1107.32 352 1103.52 348.745C1106.77 337.622 1108.13 330.298 1108.13 330.298L1087.24 336.808C1078.29 330.84 1068.52 326.229 1058.76 322.159C1085.07 302.356 1109.22 283.367 1122.78 269.803C1165.91 226.941 1148.55 113.818 1148.55 113.818L1028.65 195.472L1062.83 140.674C1097.82 91.0302 1030.27 5.03491 1030.27 5.03491L713.963 463.495C392.498 867.158 508.334 1337.01 744.617 1506.02C747.601 1508.19 751.399 1505.48 750.585 1501.95C747.873 1491.64 745.16 1486.76 748.686 1469.67C759.809 1412.97 767.947 1353.02 810.538 1285.47C789.107 1296.59 754.112 1326.16 711.25 1373.63C744.075 1292.25 823.83 1188.08 871.575 1124.6C873.203 1119.45 874.56 1114.56 876.187 1109.41C858.283 1119.99 820.304 1140.61 788.564 1175.6C812.437 1116.73 864.522 1047.29 909.012 993.845C911.182 985.435 913.624 977.026 915.794 968.887C900.602 980.281 867.778 997.371 846.075 1020.97C863.708 977.297 890.294 926.839 937.496 883.706C939.124 877.195 940.751 870.956 942.108 864.716C928.273 875.839 900.06 887.775 881.613 907.849C896.804 870.142 923.118 819.684 961.911 790.657C973.863 738.201 975.161 707.054 975.233 697.363L868.775 791.177C879.402 768.51 895.832 746.135 920.405 725.822C928.4 719.159 936.133 713.282 942.833 708.191L942.836 708.189L943.193 707.917C944.732 706.708 946.608 705.177 948.765 703.409C949.073 703.157 949.387 702.899 949.707 702.637C958.436 695.482 971.328 684.914 985.081 676.025C990.235 672.694 995.511 669.598 1000.73 667.007C1001.49 668.769 1001.75 670.685 1001.52 672.651C1001.25 674.008 1000.7 674.821 999.89 675.635L985.705 688.136C986.349 702.569 986.879 722.511 985.784 736.13C983.885 759.732 976.56 798.524 976.56 798.524C976.56 798.524 937.496 834.876 934.512 850.61C949.432 838.131 962.996 837.588 962.996 837.588L954.858 890.759C954.858 890.759 908.741 940.132 908.198 952.068C920.677 947.185 938.581 944.743 938.581 944.743C938.581 944.743 920.134 1008.77 916.608 1024.23C894.634 1039.15 850.416 1098.29 850.416 1098.29C850.416 1098.29 907.384 1066.28 900.06 1087.44C892.735 1108.6 858.825 1185.37 858.825 1185.37C858.825 1185.37 819.49 1221.99 789.649 1274.62C805.655 1264.31 822.474 1254.27 834.41 1247.76C839.293 1245.05 844.719 1250.2 842.277 1255.09C809.995 1322.09 786.937 1390.73 771.202 1460.71C769.575 1468.31 769.575 1476.45 771.745 1484.04C773.306 1489.36 775.557 1495.72 778.609 1502.27L741.362 1578.45C741.362 1578.45 715.319 1566.79 689.548 1581.71C662.42 1568.96 632.308 1567.6 600.84 1596.63C585.107 1610.58 577.982 1627.53 574.755 1640.03H873.683C873.105 1637.43 872.661 1635.96 872.661 1635.96C872.661 1635.96 863.437 1596.9 842.006 1589.03C845.733 1571.67 850.063 1554.88 853.06 1539.8C856.954 1538.01 860.314 1535.14 862.352 1531.52C898.975 1471.84 936.411 1445.25 984.427 1432.5C919.32 1475.91 879.714 1557.83 879.714 1557.83C879.714 1557.83 1042.21 1612.09 1235.09 1560.27C1235.09 1560.27 1201.45 1473.46 1137.43 1430.06C1204.16 1453.66 1243.23 1513.61 1252.45 1526.36C1254.83 1529.68 1259.68 1531.49 1266.03 1531.96C1268.94 1548.88 1274.13 1568.43 1278.49 1588.76C1257.06 1596.63 1247.84 1635.69 1247.84 1635.69C1247.84 1635.69 1247.36 1637.26 1246.76 1640.03H1547.33C1542.35 1627.76 1533.43 1609.8 1519.93 1596.63C1497.41 1574.65 1458.35 1568.96 1431.22 1581.71C1405.45 1566.78 1379.41 1578.45 1379.41 1578.45L1341.05 1500C1347.13 1493.26 1351.5 1485.62 1353.09 1477.26C1360.96 1436.84 1350.11 1316.94 1331.39 1240.71C1330.31 1235.83 1335.46 1232.03 1339.8 1234.47C1353.91 1240.44 1372.9 1251.56 1391.07 1263.22ZM726.984 801.508L836.581 910.02C840.01 902.933 835.347 869.065 843.051 835.208C849.776 795.589 869.122 753.14 913.081 716.87C921.49 710.088 929.358 704.119 936.139 698.694C937.128 697.947 938.35 697.015 939.763 695.936C939.857 695.864 939.953 695.792 940.048 695.718C943.967 692.727 949.289 688.665 955.186 684.3C968.17 674.687 983.939 663.605 993.639 659.254C975.365 645.796 928.807 655.967 906.299 669.667C854.09 602.364 817.458 603.995 798.382 613.15C796.292 609.863 794.58 606.759 793.289 603.914C790.859 604.071 788.193 604.045 785.038 603.204C782.325 602.661 775.543 598.321 773.644 595.337C774.729 601.576 777.171 618.938 783.139 625.177L704.468 714.157C684.122 736.13 706.096 780.62 726.984 801.508ZM1060.93 344.404C1055.77 341.963 1050.35 339.792 1044.92 337.894C1043.02 337.351 1040.85 336.808 1038.68 336.266C1026.2 345.218 1014 353.899 1002.06 362.309L1060.93 344.404ZM1150.45 553.289C1159.13 548.134 1167.81 542.709 1176.22 537.012C1178.71 535.428 1181.15 533.797 1183.55 532.198C1186.89 529.962 1190.15 527.787 1193.31 525.89C1193.04 523.991 1192.5 522.092 1191.96 520.464C1190.6 515.581 1189.24 510.698 1187.61 505.815C1184.36 496.049 1180.83 486.554 1176.76 477.331C1172.69 468.107 1168.08 459.155 1162.66 451.288C1157.23 443.421 1150.72 436.368 1143.4 432.57L1140.14 430.942L1138.78 427.958C1129.02 405.713 1114.64 385.367 1096.74 369.362C1087.11 397.575 1071.14 434.251 1047.55 455.51C1041.87 460.62 1035.76 464.839 1029.19 467.836C986.783 487.111 899.437 484.131 826.073 528.269C816.836 533.826 807.82 540.131 799.144 547.32L792.091 552.203L800.229 572.278C800.229 572.278 796.358 574.836 792.838 578.451C789.385 581.997 786.27 586.561 787.479 590.725C787.505 590.804 787.527 590.87 787.544 590.925C787.603 591.109 787.625 591.178 787.673 591.212C787.701 591.233 787.739 591.241 787.8 591.254C787.923 591.281 788.14 591.327 788.564 591.539C789.037 591.657 789.716 591.724 790.488 591.739C791.489 591.759 792.647 591.692 793.719 591.539C797.788 590.725 802.4 589.369 807.011 587.47C816.235 583.943 824.373 579.06 834.41 574.177C843.905 569.294 853.942 565.496 864.251 562.241C874.831 559.257 885.411 556.815 896.262 556.001C907.113 554.645 918.235 554.916 929.087 556.001C951.06 558.443 972.22 565.496 991.209 576.89C995.821 579.603 1001.25 583.129 1005.04 586.113L1011.28 590.725C1012.64 591.81 1014.54 592.895 1016.17 593.709C1023.22 596.964 1031.9 597.778 1041.12 597.236C1059.57 595.879 1078.83 589.097 1097.01 581.23C1099.08 580.335 1101.14 579.415 1103.2 578.472C1119.25 571.133 1135.06 562.424 1150.45 553.289Z\" fill=\"#010103\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1044.92 337.894C1050.35 339.792 1055.77 341.963 1060.93 344.404L1002.06 362.309C1014 353.899 1026.2 345.218 1038.68 336.266C1040.85 336.808 1043.02 337.351 1044.92 337.894Z\" fill=\"#010103\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M303.518 2036.37V1651.42C303.518 1645.18 308.672 1640.03 314.912 1640.03H1803.96C1810.2 1640.03 1815.35 1645.18 1815.35 1651.42V2036.37C1815.35 2042.61 1810.2 2047.76 1803.96 2047.76H314.912C308.672 2047.76 303.518 2042.61 303.518 2036.37ZM486.631 1801.44V1811.48H515.658V1801.17C515.658 1785.43 510.775 1773.5 501.28 1764.82C491.785 1756.41 480.392 1752.07 467.37 1752.07C454.349 1752.07 443.226 1756.41 433.46 1765.09C423.694 1773.77 418.811 1785.71 418.811 1801.17V1907.51C418.811 1923.24 423.694 1935.18 433.189 1943.86C442.684 1952.27 454.078 1956.61 467.099 1956.61C480.12 1956.61 491.243 1952.27 501.009 1943.59C510.775 1934.91 515.658 1922.97 515.658 1907.51V1844.3H463.844V1869.8H486.631V1907.78C486.631 1914.56 485.003 1919.45 481.205 1922.97C477.408 1926.5 472.796 1928.13 467.099 1928.13C461.402 1928.13 456.79 1926.5 452.992 1922.97C449.466 1919.45 447.567 1914.29 447.567 1907.78V1801.44C447.567 1794.66 449.195 1789.78 452.992 1786.25C456.79 1782.72 461.402 1781.09 467.099 1781.09C472.796 1781.09 477.679 1782.72 481.205 1786.25C484.732 1789.78 486.631 1794.93 486.631 1801.44ZM613.861 1954.98L586.733 1868.99H569.642V1954.98H540.887V1753.7H587.275C621.185 1753.7 638.276 1773.5 638.276 1812.83C638.276 1825.04 636.377 1835.35 632.579 1843.49C628.781 1851.63 622.27 1858.14 613.318 1863.29L644.515 1955.26L613.861 1954.98ZM584.562 1780.82H569.642V1843.49H585.919C595.142 1843.49 601.382 1841.05 604.366 1835.89C607.35 1831.01 608.978 1822.87 608.978 1812.02C608.978 1800.9 607.35 1792.76 604.095 1787.88C601.11 1783.26 594.6 1780.82 584.562 1780.82ZM740.819 1943.05C749.771 1934.1 754.383 1922.97 754.383 1909.68V1753.7H725.627V1906.97C725.627 1920.8 719.659 1927.86 707.723 1927.86C702.297 1927.86 697.957 1925.96 694.702 1922.43C691.446 1918.9 689.819 1913.75 689.819 1906.97V1753.7H661.063V1909.68C661.063 1922.97 665.675 1934.1 674.627 1943.05C683.579 1952 694.702 1956.61 707.723 1956.61C720.744 1956.61 731.867 1952 740.819 1943.05ZM873.745 1838.61C872.66 1844.57 870.219 1850.54 866.421 1856.51C862.623 1862.75 857.469 1867.36 850.687 1871.16C843.905 1874.69 835.495 1876.58 825.186 1876.58H810.537V1955.26H781.782V1753.97H824.915C833.325 1753.97 840.378 1755.05 846.075 1757.22C851.772 1759.39 857.197 1762.92 862.08 1768.07C866.963 1773.23 870.49 1779.2 872.118 1786.25C874.017 1793.3 874.83 1803.07 874.83 1815.28C875.102 1824.77 874.83 1832.64 873.745 1838.61ZM825.458 1780.82H810.537V1849.19H824.373C834.952 1849.19 841.463 1846.47 844.176 1841.32C846.889 1836.16 848.245 1827.48 848.245 1815.28C848.245 1803.34 846.889 1794.39 844.447 1788.96C842.006 1783.54 835.766 1780.82 825.458 1780.82ZM981.443 1856.51C985.241 1850.54 987.682 1844.57 988.767 1838.61C989.852 1832.64 990.395 1824.77 989.852 1815.28C989.852 1803.07 989.039 1793.3 987.14 1786.25C985.512 1779.2 981.985 1773.23 977.102 1768.07C972.219 1762.92 966.794 1759.39 961.097 1757.22C955.4 1755.05 948.347 1753.97 939.937 1753.97H896.804V1955.26H925.56V1876.58H940.208C950.517 1876.58 958.927 1874.69 965.709 1871.16C972.491 1867.36 977.645 1862.75 981.443 1856.51ZM925.56 1780.82H940.48C950.788 1780.82 957.028 1783.54 959.469 1788.96C961.911 1794.39 963.267 1803.34 963.267 1815.28C963.267 1827.48 961.911 1836.16 959.198 1841.32C956.485 1846.47 949.974 1849.19 939.395 1849.19H925.56V1780.82ZM1097.82 1780.82H1040.58V1840.23H1090.23V1867.36H1040.58V1926.23H1097.82V1954.98H1011.83V1753.7H1097.82V1780.82ZM1232.65 1911.85L1241.06 1954.98H1270.35L1225.32 1753.7H1201.18L1156.15 1954.98H1185.17L1193.58 1911.85H1232.65ZM1227.22 1884.72H1198.47L1213.11 1812.02L1227.22 1884.72ZM1377.51 1899.91C1377.51 1918.09 1372.9 1931.93 1363.67 1941.15C1354.45 1950.37 1341.43 1954.98 1324.34 1954.98H1284.19V1753.7H1326.78C1343.06 1753.7 1355.54 1758.31 1364.22 1767.53C1372.9 1776.75 1377.24 1789.5 1377.24 1805.78V1899.91H1377.51ZM1326.24 1780.82H1312.95V1927.86H1326.24C1334.38 1927.86 1340.07 1925.96 1343.6 1921.89C1347.13 1917.82 1348.75 1911.58 1348.75 1902.63V1805.51C1348.75 1797.1 1347.13 1791.13 1343.6 1786.79C1340.07 1782.99 1334.38 1780.82 1326.24 1780.82ZM1404.37 1954.98H1490.36V1926.23H1433.12V1753.7H1404.37V1954.98ZM1595.07 1780.82H1537.83V1840.23H1587.48V1867.36H1537.83V1926.23H1595.07V1954.98H1509.08V1753.7H1595.07V1780.82ZM1659.64 1868.99L1686.77 1954.98L1717.42 1955.26L1686.22 1863.29C1695.45 1858.14 1701.69 1851.63 1705.48 1843.49C1709.28 1835.35 1711.18 1825.04 1711.18 1812.83C1711.18 1773.5 1694.09 1753.7 1660.18 1753.7H1613.79V1954.98H1642.55V1868.99H1659.64ZM1642.55 1780.82H1657.74C1667.51 1780.82 1674.29 1783.26 1677 1787.88C1680.26 1792.76 1681.88 1800.9 1681.88 1812.02C1681.88 1822.87 1680.26 1831.01 1677.27 1835.89C1674.29 1841.05 1668.05 1843.49 1658.82 1843.49H1642.55V1780.82Z\" fill=\"#010103\"/>\n<path d=\"M486.631 1811.48V1801.44C486.631 1794.93 484.732 1789.78 481.205 1786.25C477.678 1782.72 472.795 1781.09 467.099 1781.09C461.402 1781.09 456.79 1782.72 452.992 1786.25C449.194 1789.78 447.567 1794.66 447.567 1801.44V1907.78C447.567 1914.29 449.465 1919.45 452.992 1922.97C456.79 1926.5 461.402 1928.13 467.099 1928.13C472.795 1928.13 477.407 1926.5 481.205 1922.97C485.003 1919.45 486.631 1914.56 486.631 1907.78V1869.8H463.843V1844.3H515.657V1907.51C515.657 1922.97 510.774 1934.91 501.008 1943.59C491.242 1952.27 480.12 1956.61 467.099 1956.61C454.077 1956.61 442.684 1952.27 433.189 1943.86C423.694 1935.18 418.811 1923.24 418.811 1907.51V1801.17C418.811 1785.71 423.694 1773.77 433.46 1765.09C443.226 1756.41 454.349 1752.07 467.37 1752.07C480.391 1752.07 491.785 1756.41 501.28 1764.82C510.774 1773.5 515.657 1785.44 515.657 1801.17V1811.48H486.631Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M613.86 1954.98L586.732 1868.99H569.642V1954.98H540.886V1753.7H587.275C621.185 1753.7 638.275 1773.5 638.275 1812.83C638.275 1825.04 636.376 1835.35 632.578 1843.49C628.781 1851.63 622.27 1858.14 613.318 1863.29L644.515 1955.26L613.86 1954.98ZM569.642 1780.82H584.562C594.599 1780.82 601.11 1783.26 604.094 1787.88C607.35 1792.76 608.977 1800.9 608.977 1812.02C608.977 1822.87 607.35 1831.01 604.365 1835.89C601.381 1841.05 595.142 1843.49 585.919 1843.49H569.642V1780.82Z\" fill=\"#CECDC4\"/>\n<path d=\"M754.382 1909.68C754.382 1922.97 749.771 1934.1 740.819 1943.05C731.866 1952 720.744 1956.61 707.723 1956.61C694.701 1956.61 683.579 1952 674.627 1943.05C665.674 1934.1 661.063 1922.97 661.063 1909.68V1753.7H689.818V1906.97C689.818 1913.75 691.446 1918.9 694.701 1922.43C697.957 1925.96 702.297 1927.86 707.723 1927.86C719.659 1927.86 725.627 1920.8 725.627 1906.97V1753.7H754.382V1909.68Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M873.745 1838.61C872.66 1844.57 870.218 1850.54 866.42 1856.51C862.622 1862.75 857.468 1867.36 850.686 1871.16C843.904 1874.69 835.495 1876.58 825.186 1876.58H810.537V1955.26H781.781V1753.97H824.915C833.324 1753.97 840.378 1755.05 846.075 1757.22C851.771 1759.39 857.197 1762.92 862.08 1768.07C866.963 1773.23 870.49 1779.2 872.117 1786.25C874.016 1793.3 874.83 1803.07 874.83 1815.28C875.101 1824.77 874.83 1832.64 873.745 1838.61ZM810.537 1780.82H825.457C835.766 1780.82 842.005 1783.54 844.447 1788.96C846.888 1794.39 848.245 1803.34 848.245 1815.28C848.245 1827.48 846.888 1836.16 844.176 1841.32C841.463 1846.47 834.952 1849.19 824.372 1849.19H810.537V1780.82Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M988.767 1838.61C987.682 1844.57 985.24 1850.54 981.442 1856.51C977.645 1862.75 972.49 1867.36 965.708 1871.16C958.926 1874.69 950.517 1876.58 940.208 1876.58H925.559V1955.26H896.804V1753.97H939.937C948.346 1753.97 955.4 1755.05 961.097 1757.22C966.793 1759.39 972.219 1762.92 977.102 1768.07C981.985 1773.23 985.512 1779.2 987.139 1786.25C989.038 1793.3 989.852 1803.07 989.852 1815.28C990.395 1824.77 989.852 1832.64 988.767 1838.61ZM925.559 1780.82H940.479C950.788 1780.82 957.027 1783.54 959.469 1788.96C961.91 1794.39 963.267 1803.34 963.267 1815.28C963.267 1827.48 961.91 1836.16 959.198 1841.32C956.485 1846.47 949.974 1849.19 939.394 1849.19H925.559V1780.82Z\" fill=\"#CECDC4\"/>\n<path d=\"M1097.82 1780.82H1040.58V1840.23H1090.23V1867.36H1040.58V1926.23H1097.82V1954.98H1011.83V1753.7H1097.82V1780.82Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1241.06 1954.98L1232.65 1911.85H1193.58L1185.17 1954.98H1156.15L1201.18 1753.7H1225.32L1270.35 1954.98H1241.06ZM1227.22 1884.72H1198.47L1213.11 1812.02L1227.22 1884.72Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1377.51 1899.91C1377.51 1918.09 1372.9 1931.93 1363.67 1941.15C1354.45 1950.37 1341.43 1954.98 1324.34 1954.98H1284.19V1753.7H1326.78C1343.06 1753.7 1355.54 1758.31 1364.22 1767.53C1372.9 1776.75 1377.24 1789.5 1377.24 1805.78V1899.91H1377.51ZM1312.94 1780.82H1326.24C1334.38 1780.82 1340.07 1782.99 1343.6 1786.79C1347.13 1791.13 1348.75 1797.1 1348.75 1805.51V1902.63C1348.75 1911.58 1347.13 1917.82 1343.6 1921.89C1340.07 1925.96 1334.38 1927.86 1326.24 1927.86H1312.94V1780.82Z\" fill=\"#CECDC4\"/>\n<path d=\"M1490.36 1954.98H1404.37V1753.7H1433.12V1926.23H1490.36V1954.98Z\" fill=\"#CECDC4\"/>\n<path d=\"M1595.07 1780.82H1537.83V1840.23H1587.48V1867.36H1537.83V1926.23H1595.07V1954.98H1509.08V1753.7H1595.07V1780.82Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1686.77 1954.98L1659.64 1868.99H1642.55V1954.98H1613.79V1753.7H1660.18C1694.09 1753.7 1711.18 1773.5 1711.18 1812.83C1711.18 1825.04 1709.28 1835.35 1705.48 1843.49C1701.69 1851.63 1695.45 1858.14 1686.22 1863.29L1717.42 1955.26L1686.77 1954.98ZM1642.55 1780.82H1657.74C1667.51 1780.82 1674.29 1783.26 1677 1787.88C1680.26 1792.76 1681.88 1800.9 1681.88 1812.02C1681.88 1822.87 1680.26 1831.01 1677.27 1835.89C1674.29 1841.05 1668.05 1843.49 1658.82 1843.49H1642.55V1780.82Z\" fill=\"#CECDC4\"/>\n<path d=\"M1474.9 1589.84C1502.03 1595.81 1515.86 1615.07 1524.54 1635.69C1525.1 1637.01 1525.52 1638.47 1525.82 1640.03H1465.33C1465.95 1643.27 1466.05 1646.97 1465.72 1650.95C1463.72 1674.95 1446.28 1709.14 1435.83 1713.28C1422.81 1718.43 1414.4 1701.88 1414.4 1659.83C1414.4 1644.14 1374.78 1640.67 1350.1 1640.03C1341.18 1639.8 1334.21 1639.94 1331.78 1640C1331.17 1640.02 1330.85 1640.03 1330.85 1640.03H1262.19C1262.44 1638.47 1262.81 1637.01 1263.3 1635.69C1269.02 1620.18 1277.5 1605.43 1291.75 1596.54C1290.9 1566.28 1284.42 1534.79 1279.03 1513.89C1274.69 1496.52 1288.26 1478.89 1305.89 1480.52C1314.03 1481.06 1321.08 1485.4 1323.52 1496.52C1323.52 1496.52 1350.59 1559.28 1373.94 1594.63C1386.35 1590.35 1401.54 1587.01 1414.4 1589.84C1420.6 1591.21 1426.1 1593.26 1431 1595.87C1443.96 1591.03 1460.82 1586.75 1474.9 1589.84Z\" fill=\"#CC7910\"/>\n<path d=\"M645.871 1589.84C618.743 1595.81 604.908 1615.07 596.227 1635.69C595.669 1637.01 595.246 1638.47 594.945 1640.03H655.45C651.081 1662.78 672.763 1708.44 684.947 1713.27C688.664 1714.74 692.005 1714.44 694.882 1712.29C702.077 1706.89 706.366 1689.86 706.366 1659.83C706.366 1656.23 708.231 1653.27 711.404 1650.84C725.553 1639.98 765.785 1639.65 782.634 1640.03H858.583C858.325 1638.47 857.956 1637.01 857.468 1635.69C851.717 1620.08 843.166 1605.25 828.754 1596.37C829.618 1566.16 836.091 1534.75 841.463 1513.89C845.803 1496.52 832.239 1478.89 814.606 1480.52C806.468 1481.06 799.415 1485.4 796.973 1496.52C796.973 1496.52 769.943 1559.19 746.605 1594.56C734.237 1590.31 719.156 1587.03 706.366 1589.84C700.173 1591.21 694.673 1593.26 689.769 1595.87C676.81 1591.03 659.952 1586.75 645.871 1589.84Z\" fill=\"#CC7910\"/>\n<path d=\"M1502.57 1617.24C1492.8 1607.48 1475.98 1612.09 1485.48 1627.01C1494.7 1641.93 1497.96 1641.39 1514.78 1662C1522.37 1648.17 1512.06 1627.01 1502.57 1617.24Z\" fill=\"#010103\"/>\n<path d=\"M1452.65 1656.58C1449.94 1643.56 1433.94 1638.13 1433.39 1655.22C1432.85 1672.31 1439.63 1663.63 1438.28 1699.17C1451.84 1692.12 1455.09 1669.6 1452.65 1656.58Z\" fill=\"#010103\"/>\n<path d=\"M617.658 1615.89C627.967 1606.66 644.515 1612.09 634.477 1626.47C624.44 1640.84 621.185 1640.3 603.28 1660.1C596.499 1645.73 607.621 1625.11 617.658 1615.89Z\" fill=\"#010103\"/>\n<path d=\"M670.015 1657.66C671.643 1644.37 687.377 1637.86 689.004 1654.95C690.632 1672.04 680.052 1670.96 687.377 1704.05C672.999 1697.81 668.387 1670.96 670.015 1657.66Z\" fill=\"#010103\"/>\n<path d=\"M880.125 574.092C881.75 592.433 897.329 607.002 916.065 607.002C933.279 607.002 947.7 595.034 951.461 579.136C947.164 577.66 942.79 576.393 938.357 575.336C936.16 585.549 926.936 593.167 916.065 593.167C904.138 593.167 894.441 583.997 893.607 572.29C889.096 572.676 884.593 573.285 880.125 574.092Z\" fill=\"white\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1060.93 344.404C1055.77 341.963 1050.35 339.792 1044.92 337.894C1043.02 337.351 1040.85 336.808 1038.68 336.266C1026.2 345.218 1014 353.899 1002.06 362.309L1060.93 344.404Z\" fill=\"#CECDC4\"/>\n<path d=\"M1150.45 553.289C1159.13 548.134 1167.81 542.709 1176.22 537.012C1182.19 533.214 1187.89 529.145 1193.31 525.889C1193.04 523.991 1192.5 522.092 1191.96 520.464C1190.6 515.581 1189.24 510.698 1187.62 505.815C1184.36 496.049 1180.83 486.554 1176.76 477.331C1172.69 468.107 1168.08 459.155 1162.66 451.288C1157.23 443.421 1150.72 436.368 1143.4 432.57L1140.14 430.942L1138.78 427.958C1129.02 405.713 1114.64 385.367 1096.74 369.362C1092.66 381.325 1087.43 394.81 1080.97 407.995L1102.16 405.984C1102.16 405.984 1063.64 488.996 1015.9 503.645C959.218 520.87 925.076 523.709 899.09 525.87C862.767 528.89 842.38 530.586 798.656 568.396L800.23 572.278C800.23 572.278 785.038 582.315 787.48 590.725C787.751 591.539 787.479 590.996 788.565 591.539C789.65 591.81 791.82 591.81 793.719 591.539C797.788 590.725 802.4 589.369 807.012 587.47C816.235 583.943 824.373 579.06 834.411 574.177C843.905 569.294 853.943 565.496 864.251 562.241C874.831 559.257 885.411 556.815 896.262 556.001C907.113 554.645 918.236 554.916 929.087 556.001C951.06 558.443 972.22 565.496 991.21 576.89C995.821 579.603 1001.25 583.129 1005.04 586.113L1011.28 590.725C1012.64 591.81 1014.54 592.895 1016.17 593.709C1023.22 596.964 1031.9 597.778 1041.12 597.236C1059.57 595.879 1078.83 589.097 1097.01 581.23C1115.18 573.363 1133.09 563.597 1150.45 553.289Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1102.16 405.984L1080.97 407.995C1068.54 433.381 1051.51 457.659 1029.19 467.836C1013.08 475.159 990.477 479.27 964.623 483.973C913.861 493.207 850.548 504.723 799.144 547.32L792.091 552.203L798.655 568.396C842.38 530.586 862.767 528.89 899.09 525.87C925.076 523.709 959.217 520.87 1015.9 503.645C1063.64 488.996 1102.16 405.984 1102.16 405.984Z\" fill=\"#A7A49B\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M899.09 525.87C862.767 528.89 842.38 530.586 798.655 568.396L792.091 552.203L799.144 547.32C850.548 504.723 913.861 493.207 964.623 483.973C990.477 479.27 1013.08 475.159 1029.19 467.836C1051.51 457.659 1068.54 433.381 1080.97 407.995L1102.16 405.984C1102.16 405.984 1063.64 488.996 1015.9 503.645C959.217 520.87 925.076 523.709 899.09 525.87Z\" fill=\"#A7A49B\"/>\n<path d=\"M1141.23 464.038L1161.84 510.698C1163.74 515.038 1161.84 519.921 1157.5 521.82L1157.23 522.091L1156.69 522.363L1089.14 548.134H1088.87C1084.8 549.762 1080.46 547.592 1078.83 543.522C1078.83 543.251 1078.56 542.709 1078.56 542.437L1065.54 485.74V485.469C1064.72 482.213 1066.9 478.687 1070.15 477.873L1134.44 460.24C1137.16 459.426 1140.14 460.782 1141.23 463.495V464.038Z\" fill=\"#010103\"/>\n<path d=\"M1071.78 484.384L1135.8 465.937L1143.13 482.756L1076.93 504.73L1071.78 484.384Z\" fill=\"#010103\"/>\n<path d=\"M1076.93 504.73L1143.12 482.756L1148.55 497.948L1082.09 524.533L1076.93 504.73Z\" fill=\"#C1000C\"/>\n<path d=\"M1082.09 524.533L1148.55 497.948L1153.43 513.682L1086.43 540.538L1082.09 524.533Z\" fill=\"#EEB11B\"/>\n<path d=\"M783.138 624.906C783.138 624.906 826.543 566.852 906.299 669.667C928.807 655.966 975.365 645.796 993.639 659.253C977.808 666.355 945.814 691.384 936.139 698.694C929.357 704.119 921.49 710.087 913.081 716.869C869.122 753.14 849.776 795.589 843.051 835.207C835.347 869.065 840.01 902.932 836.58 910.02L726.984 801.508C706.096 780.62 684.122 736.13 704.468 714.157L783.139 625.177L782.943 624.98L783.138 624.906Z\" fill=\"#D18D1E\"/>\n<path d=\"M853.129 679.433C845.804 688.114 806.198 665.327 794.533 658.273C793.176 657.46 793.447 655.561 795.075 655.018C804.57 652.305 829.256 645.252 839.565 647.965C852.586 651.763 861.81 669.396 853.129 679.433Z\" fill=\"#854205\"/>\n<path d=\"M845.262 672.651C839.293 679.433 803.213 658.545 803.213 656.917C803.213 655.018 827.357 649.05 836.038 651.491C844.99 653.662 851.23 665.598 845.262 672.651Z\" fill=\"#010103\"/>\n<path d=\"M1092.94 595.336C1078.83 600.491 1068.79 606.459 1062.83 608.087C1061.2 608.629 1060.11 610.257 1060.39 612.156C1078.56 746.439 1092.4 752.678 1099.72 755.662C1107.32 758.646 1134.17 742.641 1137.16 734.774C1143.4 716.869 1105.15 706.289 1096.19 597.507C1095.92 595.879 1094.57 594.794 1092.94 595.336ZM1086.97 694.896C1087.78 689.741 1092.67 685.943 1097.82 686.757C1102.98 687.571 1106.5 692.183 1105.96 697.608C1105.15 702.763 1100.53 706.289 1095.38 705.747C1089.95 704.933 1086.16 700.05 1086.97 694.896ZM1108.4 738.843C1102.7 738.029 1098.64 732.875 1099.45 727.178C1100.26 721.481 1105.42 717.683 1111.11 718.226C1116.81 719.039 1120.61 724.194 1120.07 729.891C1119.25 735.587 1114.1 739.657 1108.4 738.843Z\" fill=\"#CECDC4\"/>\n<path d=\"M999.89 675.635C1000.7 674.821 1001.25 674.008 1001.52 672.651C1001.75 670.685 1001.49 668.769 1000.73 667.007C977.495 678.538 953.212 700.045 943.192 707.917L942.834 708.19C936.134 713.281 928.4 719.159 920.405 725.822C895.831 746.134 879.401 768.51 868.774 791.177L999.89 675.635Z\" fill=\"#854605\"/>\n<g opacity=\"0.1\">\n<path d=\"M1271.98 1512.53C1274.7 1507.1 1278.22 1502.76 1282.83 1498.97C1287.17 1495.17 1292.6 1492.18 1298.57 1490.56C1304.54 1489.2 1311.05 1489.47 1316.47 1491.1C1319.46 1491.64 1321.9 1493.27 1324.61 1494.35C1327.05 1495.71 1329.49 1497.61 1331.66 1498.97C1333.56 1500.32 1334.11 1502.76 1332.75 1504.66C1331.66 1506.29 1329.49 1506.83 1327.59 1506.02L1327.05 1505.75C1322.71 1503.58 1318.37 1501.41 1313.76 1500.32C1309.42 1498.97 1304.81 1499.51 1300.74 1500.32C1296.4 1501.14 1292.33 1503.31 1288.8 1506.29C1285.28 1509.27 1281.75 1513.07 1279.31 1516.6L1279.04 1516.87C1277.68 1518.77 1274.97 1519.31 1272.8 1517.95C1271.44 1516.87 1270.9 1514.43 1271.98 1512.53Z\" fill=\"#010103\"/>\n<path d=\"M1274.97 1530.98C1278.49 1525.28 1282.56 1520.94 1287.72 1517.14C1292.87 1513.34 1298.57 1510.36 1305.08 1509C1311.59 1507.65 1318.37 1507.92 1324.34 1509.82C1327.59 1510.36 1330.31 1511.99 1333.29 1513.07C1336 1514.43 1338.72 1516.06 1341.16 1517.68C1343.06 1518.77 1343.6 1521.21 1342.51 1523.11C1341.43 1525.01 1339.26 1525.55 1337.36 1524.74L1336.82 1524.47C1331.93 1522.29 1327.05 1520.12 1321.9 1519.04C1317.01 1517.68 1311.86 1518.23 1306.98 1519.04C1302.09 1519.85 1297.48 1522.02 1293.41 1525.01C1289.34 1527.99 1285.28 1531.79 1282.29 1535.59L1282.02 1535.86C1280.66 1537.76 1277.68 1538.03 1275.78 1536.67C1274.15 1535.32 1273.88 1532.87 1274.97 1530.98Z\" fill=\"#010103\"/>\n<path d=\"M1277.68 1549.15C1281.75 1543.18 1286.63 1538.84 1292.33 1535.05C1298.03 1531.25 1304.54 1528.53 1311.32 1527.18C1318.1 1526.09 1325.42 1526.36 1331.94 1527.99C1335.46 1528.53 1338.45 1530.16 1341.43 1530.98C1344.41 1532.33 1347.4 1533.96 1350.11 1535.59C1352.01 1536.67 1352.82 1539.11 1351.74 1541.01C1350.65 1542.91 1348.48 1543.73 1346.58 1542.91L1346.04 1542.64C1340.62 1540.47 1335.19 1538.3 1329.49 1537.22C1323.8 1535.86 1318.37 1536.4 1312.95 1537.22C1307.52 1538.03 1302.37 1540.2 1297.48 1543.18C1292.87 1546.17 1287.99 1549.97 1284.73 1554.03L1284.46 1554.31C1282.83 1556.2 1280.12 1556.48 1278.22 1554.85C1276.87 1553.76 1276.59 1551.05 1277.68 1549.15Z\" fill=\"#010103\"/>\n<path d=\"M1280.66 1567.6C1285.28 1561.36 1290.97 1557.02 1297.21 1553.22C1303.45 1549.69 1310.5 1546.98 1317.83 1545.63C1325.15 1544.81 1332.75 1544.81 1339.8 1546.71C1343.33 1547.25 1346.86 1548.61 1350.11 1549.69C1353.37 1551.05 1356.62 1552.68 1359.61 1554.31C1361.5 1555.39 1362.32 1557.56 1361.5 1559.73C1360.69 1561.63 1358.52 1562.44 1356.35 1561.9L1355.81 1561.63C1349.84 1559.46 1343.6 1557.29 1337.63 1556.2C1331.39 1554.85 1325.15 1555.12 1319.18 1555.93C1313.22 1556.75 1307.25 1558.92 1301.82 1561.63C1296.4 1564.61 1291.24 1568.68 1287.45 1572.75L1287.17 1573.02C1285.55 1574.92 1282.83 1574.92 1280.93 1573.3C1279.58 1571.94 1279.31 1569.5 1280.66 1567.6Z\" fill=\"#010103\"/>\n<path d=\"M1283.65 1586.05C1289.07 1579.53 1295.04 1575.19 1302.09 1571.4C1309.15 1567.87 1316.47 1565.43 1324.34 1564.34C1332.21 1563.53 1340.07 1563.8 1347.67 1565.43C1351.47 1565.97 1354.99 1567.33 1358.79 1568.41C1362.32 1569.77 1365.84 1571.4 1369.37 1572.75C1371.54 1573.57 1372.36 1576.01 1371.54 1578.18C1370.73 1580.08 1368.56 1581.16 1366.66 1580.35H1366.39C1359.61 1578.18 1353.09 1576.01 1346.31 1574.92C1339.53 1573.57 1332.75 1573.84 1326.24 1574.65C1319.46 1575.47 1313.22 1577.36 1306.98 1580.35C1301.01 1583.33 1295.31 1587.4 1290.7 1591.74L1290.43 1592.01C1288.8 1593.64 1285.82 1593.64 1284.19 1592.01C1282.29 1590.39 1282.02 1587.67 1283.65 1586.05Z\" fill=\"#010103\"/>\n<path d=\"M840.921 1516.87C838.48 1513.34 834.953 1509.54 831.426 1506.56C827.9 1503.58 823.831 1501.41 819.49 1500.59C815.421 1499.51 810.809 1499.24 806.469 1500.59C802.128 1501.68 797.788 1503.58 793.176 1506.02L792.633 1506.29C790.735 1507.37 788.293 1506.56 787.208 1504.39C786.394 1502.49 786.937 1500.32 788.564 1499.24C791.006 1497.61 793.176 1495.98 795.618 1494.62C798.33 1493.54 800.772 1491.91 803.756 1491.37C809.453 1489.47 815.692 1489.2 821.66 1490.83C827.628 1492.45 833.054 1495.44 837.394 1499.24C842.006 1503.03 845.261 1507.37 848.246 1512.8C849.331 1514.97 848.517 1517.68 846.347 1518.77C844.448 1519.85 842.006 1519.31 840.65 1517.41L840.921 1516.87Z\" fill=\"#010103\"/>\n<path d=\"M838.208 1535.59C835.224 1531.79 831.155 1527.99 827.086 1525.01C823.017 1522.02 818.134 1519.85 813.522 1519.04C808.639 1518.23 803.756 1517.68 798.602 1519.04C793.447 1520.12 788.564 1522.02 783.681 1524.47L783.139 1524.74C781.24 1525.55 778.798 1524.74 777.713 1522.84C776.899 1520.94 777.442 1518.77 779.341 1517.68C782.054 1516.06 784.495 1514.43 787.208 1513.07C790.192 1511.99 792.905 1510.63 796.16 1509.82C802.128 1507.92 808.91 1507.92 815.421 1509C821.931 1510.36 827.628 1513.34 832.783 1517.14C837.937 1520.94 842.006 1525.28 845.533 1530.98C846.889 1533.15 846.075 1535.86 843.905 1536.94C842.006 1538.03 839.565 1537.49 838.208 1535.86V1535.59Z\" fill=\"#010103\"/>\n<path d=\"M835.495 1554.31C831.969 1550.24 827.357 1546.44 822.745 1543.45C817.862 1540.47 812.708 1538.57 807.282 1537.49C801.857 1536.67 796.16 1536.4 790.734 1537.49C785.038 1538.57 779.612 1540.47 774.186 1542.91L773.644 1543.18C771.474 1544 769.303 1543.18 768.49 1541.01C767.676 1539.11 768.49 1536.94 770.388 1535.86C773.373 1534.23 776.085 1532.6 779.069 1531.25C782.325 1530.16 785.309 1528.81 788.564 1528.26C795.075 1526.64 802.399 1526.36 809.181 1527.45C815.963 1528.81 822.474 1531.52 828.171 1535.32C833.868 1539.11 838.751 1543.45 842.82 1549.42C844.176 1551.32 843.634 1554.31 841.735 1555.39C839.836 1556.75 837.394 1556.2 836.038 1554.58L835.495 1554.31Z\" fill=\"#010103\"/>\n<path d=\"M833.054 1573.02C829.256 1568.95 823.831 1564.89 818.676 1561.9C813.251 1558.92 807.283 1557.02 801.315 1556.2C795.346 1555.39 789.107 1555.12 782.868 1556.48C776.628 1557.56 770.66 1559.46 764.692 1561.9L764.149 1562.17C761.979 1562.99 759.809 1561.9 758.995 1559.73C758.181 1557.83 759.266 1555.66 760.894 1554.58C764.149 1552.95 767.133 1551.32 770.389 1549.97C773.915 1548.88 777.171 1547.52 780.697 1546.98C787.751 1545.35 795.346 1545.08 802.671 1545.9C809.995 1546.98 817.049 1549.69 823.288 1553.49C829.799 1557.29 835.224 1561.63 839.836 1567.87C841.192 1569.77 840.921 1572.48 839.022 1574.11C837.123 1575.47 834.682 1575.19 833.054 1573.57V1573.02Z\" fill=\"#010103\"/>\n<path d=\"M830.341 1591.74C826.001 1587.4 820.033 1583.33 814.065 1580.35C808.096 1577.36 801.586 1575.47 794.804 1574.65C788.293 1573.84 781.24 1573.57 774.729 1574.92C767.947 1576.01 761.436 1577.91 754.655 1580.35H754.383C752.213 1581.16 750.043 1579.81 749.229 1577.91C748.686 1576.01 749.5 1573.84 751.399 1573.02C754.926 1571.67 758.181 1570.04 761.979 1568.68C765.777 1567.87 769.304 1566.24 773.101 1565.7C780.697 1564.07 788.564 1563.8 796.431 1564.61C804.299 1565.7 811.894 1568.14 818.676 1571.67C825.73 1575.19 831.698 1579.81 837.123 1586.32C838.751 1588.22 838.48 1590.93 836.581 1592.56C834.953 1593.91 832.24 1593.91 830.613 1592.28L830.341 1591.74Z\" fill=\"#010103\"/>\n</g>\n<g opacity=\"0.1\">\n<path d=\"M1453.47 1660.1C1453.47 1645.73 1435.56 1640.03 1431.22 1648.71C1427.15 1657.39 1432.04 1673.13 1429.05 1701.88C1445.33 1697.27 1453.47 1674.48 1453.47 1660.1Z\" fill=\"#010103\"/>\n<path d=\"M671.914 1663.63C671.914 1649.25 684.935 1640.3 689.547 1648.71C697.414 1662.82 688.733 1673.13 691.717 1701.88C675.44 1697.27 671.914 1678.01 671.914 1663.63Z\" fill=\"#010103\"/>\n<path d=\"M1465.4 1640.03C1465.4 1640.03 1459.43 1614.26 1434.48 1601.78C1455.91 1591.74 1452.65 1595.27 1452.65 1595.27C1479.26 1601.02 1492.33 1628.47 1496.74 1640.03C1497.94 1643.21 1498.5 1645.18 1498.5 1645.18L1465.4 1640.03Z\" fill=\"#010103\"/>\n<path d=\"M1299.38 1641.39L1398.94 1646.54C1398.94 1646.27 1328.68 1590.11 1299.38 1641.39Z\" fill=\"#010103\"/>\n<path d=\"M656.722 1643.56C656.722 1643.56 664.86 1614.53 689.547 1601.78C679.238 1596.35 674.898 1598.25 674.898 1598.25C657.246 1605.67 642.971 1620.81 630.709 1640.03C629.969 1641.19 629.235 1642.37 628.509 1643.56H656.722Z\" fill=\"#010103\"/>\n<path d=\"M826 1641.39L721.829 1646.81C722.1 1646.81 796.973 1590.11 826 1641.39Z\" fill=\"#010103\"/>\n<path d=\"M832.239 1485.67C832.239 1485.67 835.223 1488.93 833.867 1504.39C832.511 1520.12 815.691 1590.39 815.691 1590.39L828.984 1596.35L846.075 1504.39C846.075 1504.66 837.665 1487.57 832.239 1485.67Z\" fill=\"#010103\"/>\n<path d=\"M1285.55 1487.57C1285.55 1487.57 1282.56 1490.83 1283.92 1506.29C1285.27 1521.75 1302.09 1592.28 1302.09 1592.28L1288.8 1598.25L1271.71 1506.29C1271.71 1506.29 1280.12 1489.2 1285.55 1487.57Z\" fill=\"#010103\"/>\n</g>\n<path d=\"M985.784 736.13C983.885 759.731 976.56 798.524 976.56 798.524C976.56 798.524 937.496 834.876 934.512 850.61C949.432 838.131 962.996 837.588 962.996 837.588L954.858 890.759C954.858 890.759 908.741 940.132 908.198 952.068C920.677 947.185 938.581 944.743 938.581 944.743C938.581 944.743 920.134 1008.77 916.608 1024.23C894.634 1039.15 850.416 1098.29 850.416 1098.29C850.416 1098.29 907.384 1066.28 900.06 1087.44C892.735 1108.6 858.825 1185.37 858.825 1185.37C858.825 1185.37 819.49 1221.99 789.649 1274.62C805.655 1264.31 822.474 1254.27 834.41 1247.76C839.293 1245.05 844.719 1250.2 842.277 1255.09C809.995 1322.09 786.937 1390.72 771.202 1460.71C769.575 1468.31 769.575 1476.45 771.745 1484.04C773.289 1489.3 775.507 1495.58 778.507 1502.05L775.543 1508.19C757.17 1508.19 751.936 1503.93 750.671 1502.45C750.653 1502.29 750.624 1502.12 750.585 1501.95C747.873 1491.64 745.16 1486.76 748.686 1469.67C759.809 1412.97 767.947 1353.02 810.538 1285.47C789.107 1296.59 754.112 1326.16 711.25 1373.63C744.075 1292.25 823.831 1188.08 871.576 1124.6C873.203 1119.45 874.56 1114.56 876.187 1109.41C858.283 1119.99 820.304 1140.61 788.564 1175.6C812.437 1116.73 864.522 1047.29 909.012 993.845C911.182 985.435 913.624 977.025 915.794 968.887C900.602 980.281 867.778 997.371 846.075 1020.97C863.708 977.297 890.294 926.839 937.496 883.706C939.124 877.195 940.752 870.956 942.108 864.716C928.273 875.839 900.06 887.775 881.613 907.849C896.804 870.142 923.118 819.684 961.911 790.657C973.863 738.201 975.161 707.054 975.233 697.363L985.705 688.136C986.349 702.569 986.879 722.511 985.784 736.13Z\" fill=\"#CECDC4\"/>\n<path d=\"M1378.59 1486.76C1366.93 1505.75 1349.3 1507.92 1340.89 1501.95L1341.05 1500C1347.13 1493.26 1351.5 1485.62 1353.09 1477.26C1360.96 1436.84 1350.11 1316.94 1331.39 1240.71C1330.31 1235.83 1335.46 1232.03 1339.8 1234.47C1353.91 1240.44 1372.9 1251.56 1391.07 1263.22C1361.23 1210.6 1321.9 1173.97 1321.9 1173.97C1321.9 1173.97 1287.99 1097.47 1280.66 1076.04C1273.34 1054.88 1330.31 1086.89 1330.31 1086.89C1330.31 1086.89 1286.36 1028.03 1264.12 1012.83C1260.59 997.371 1242.14 933.35 1242.14 933.35C1242.14 933.35 1260.05 935.791 1272.52 940.674C1271.98 928.738 1225.87 879.365 1225.87 879.365L1217.73 826.195C1217.73 826.195 1231.56 827.008 1246.21 839.216C1243.23 823.482 1213.11 796.897 1204.16 787.131C1198.45 719.988 1174.48 618.239 1158.14 572.359C1162.11 569.805 1166.11 567.223 1170.03 564.667L1170.8 565.767C1197.38 633.044 1210.94 704.391 1220.44 778.992C1259.23 808.019 1285.55 858.748 1300.74 896.184C1282.56 876.11 1254.08 864.174 1240.24 853.051C1241.87 859.291 1243.23 865.53 1244.85 872.041C1292.06 915.174 1318.64 965.632 1336.28 1009.31C1314.57 985.435 1281.75 968.616 1266.56 957.222C1268.73 965.36 1270.9 973.77 1273.34 982.18C1317.83 1035.89 1370.19 1105.34 1393.79 1163.94C1362.05 1128.94 1324.07 1108.32 1306.16 1097.74C1307.79 1102.9 1309.15 1107.78 1310.78 1112.94C1358.79 1176.14 1439.63 1287.1 1472.73 1368.48C1429.87 1321.28 1384.83 1285.74 1363.4 1274.62C1384.29 1334.57 1385.92 1430.87 1378.87 1486.22C1378.85 1486.32 1378.84 1486.42 1378.84 1486.53L1378.59 1486.76Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1391.57 1262.89C1361.73 1210.26 1322.39 1173.64 1322.39 1173.64C1322.39 1173.64 1288.48 1097.14 1281.16 1075.71C1273.83 1054.55 1330.8 1086.56 1330.8 1086.56C1330.8 1086.56 1286.85 1027.69 1264.61 1012.5C1261.08 997.039 1242.63 933.017 1242.63 933.017C1242.63 933.017 1260.54 935.458 1273.02 940.341C1272.48 928.405 1226.36 879.033 1226.36 879.033L1218.22 825.862C1218.22 825.862 1232.06 826.676 1246.7 838.883C1243.72 823.149 1213.61 796.564 1204.66 786.798C1198.95 719.655 1174.97 617.906 1158.63 572.026C1162.61 569.472 1166.6 566.89 1170.53 564.334L1171.29 565.435C1197.87 632.712 1211.44 704.058 1220.93 778.66C1259.73 807.686 1286.04 858.415 1301.23 895.852C1283.06 875.777 1254.57 863.841 1240.74 852.719C1242.36 858.958 1243.72 865.198 1245.35 871.708C1292.55 914.841 1319.14 965.299 1336.77 1008.98C1315.07 985.103 1282.24 968.283 1267.05 956.89C1269.22 965.028 1271.39 973.438 1273.83 981.847C1318.32 1035.56 1370.68 1105.01 1394.28 1163.6C1362.54 1128.61 1324.56 1107.99 1306.66 1097.41C1308.28 1102.57 1309.64 1107.45 1311.27 1112.6C1359.28 1175.81 1440.13 1286.76 1473.22 1368.15C1430.36 1320.95 1385.33 1285.41 1363.9 1274.29C1384.78 1334.24 1386.41 1430.54 1379.36 1485.88C1379.09 1487.78 1380.72 1489.14 1382.61 1488.6C1397.81 1484.25 1457.22 1465.54 1506.86 1421.86C1588.51 1468.25 1665.56 1485.34 1723.61 1492.66C1726.05 1492.94 1727.68 1490.22 1726.32 1488.32C1703.27 1456.04 1579.83 1283.78 1583.09 1278.08C1592.86 1260.99 1613.2 1214.33 1613.2 1214.33C1687.26 1319.86 1807.71 1383.61 1936.84 1385.24C1939.28 1385.24 1940.63 1382.53 1939.28 1380.63C1908.89 1338.58 1676.41 1015.49 1677.77 1008.43C1683.46 980.491 1698.93 952.007 1701.64 922.166L1793.6 1053.19C1867.93 1158.99 1988.38 1222.47 2117.51 1224.37C2119.95 1224.37 2121.31 1221.66 2119.95 1219.76L1410.56 203.821C1401.06 190.257 1380.72 191.342 1372.58 205.448C1372.58 205.448 1316.15 296.327 1356.3 375.54C1428.46 518.775 1395.36 645.733 1331.34 657.127C1287.72 664.891 1235.4 607.904 1185.54 554.499C1204.28 542.152 1218.76 532.339 1218.76 532.339C1218.76 532.339 1203.03 476.184 1197.6 466.418C1192.45 456.652 1186.48 447.157 1179.16 438.476C1172.37 430.609 1164.51 422.742 1154.2 417.588C1144.97 395.886 1131.95 375.54 1115.13 358.449C1111.61 354.923 1107.81 351.667 1104.01 348.412C1107.27 337.29 1108.62 329.965 1108.62 329.965L1087.73 336.476C1078.78 330.508 1069.02 325.896 1059.25 321.827C1085.56 302.023 1109.71 283.034 1123.27 269.47C1166.41 226.608 1149.04 113.485 1149.04 113.485L1029.14 195.14L1063.32 140.341C1098.31 90.6975 1030.77 4.70227 1030.77 4.70227L714.456 463.163C392.991 866.825 508.827 1336.68 745.11 1505.69C748.094 1507.86 751.892 1505.14 751.078 1501.62C748.366 1491.31 745.653 1486.43 749.18 1469.33C760.302 1412.64 768.44 1352.68 811.031 1285.14C789.6 1296.26 754.605 1325.83 711.743 1373.3C744.568 1291.92 824.324 1187.75 872.069 1124.27C873.696 1119.11 875.053 1114.23 876.68 1109.08C858.776 1119.66 820.797 1140.27 789.057 1175.27C812.93 1116.4 865.015 1046.95 909.505 993.512C911.675 985.102 914.117 976.693 916.287 968.555C901.095 979.948 868.271 997.039 846.568 1020.64C864.202 976.964 890.787 926.506 937.989 883.373C939.617 876.862 941.245 870.623 942.601 864.384C928.766 875.506 900.553 887.442 882.106 907.517C897.298 869.809 923.612 819.351 962.404 790.325C974.356 737.869 975.654 706.722 975.727 697.031L869.268 790.845C879.895 768.178 896.325 745.802 920.898 725.489C928.893 718.827 936.627 712.95 943.326 707.858L943.329 707.856L943.686 707.585C945.225 706.375 947.101 704.844 949.258 703.076C949.566 702.824 949.88 702.567 950.2 702.305C958.929 695.149 971.821 684.581 985.574 675.692C990.728 672.361 996.004 669.266 1001.23 666.674C1001.98 668.436 1002.24 670.353 1002.01 672.318C1001.74 673.675 1001.2 674.489 1000.38 675.303L986.198 687.803C986.842 702.236 987.373 722.178 986.277 735.798C984.378 759.399 977.053 798.192 977.053 798.192C977.053 798.192 937.989 834.543 935.005 850.277C949.926 837.798 963.489 837.256 963.489 837.256L955.351 890.426C955.351 890.426 909.234 939.799 908.691 951.735C921.17 946.852 939.074 944.411 939.074 944.411C939.074 944.411 920.627 1008.43 917.101 1023.9C895.127 1038.82 850.909 1097.95 850.909 1097.95C850.909 1097.95 907.877 1065.94 900.553 1087.1C893.228 1108.26 859.319 1185.03 859.319 1185.03C859.319 1185.03 819.983 1221.66 790.143 1274.29C806.148 1263.98 822.967 1253.94 834.903 1247.43C839.786 1244.72 845.212 1249.87 842.771 1254.75C810.488 1321.76 787.43 1390.39 771.696 1460.38C770.068 1467.98 770.068 1476.12 772.238 1483.71C773.799 1489.03 776.051 1495.39 779.102 1501.94L741.855 1578.12C741.855 1578.12 715.812 1566.45 690.041 1581.37C662.913 1568.62 632.801 1567.27 601.333 1596.29C585.6 1610.24 578.475 1627.2 575.248 1639.7H874.176C873.598 1637.1 873.154 1635.63 873.154 1635.63C873.154 1635.63 863.93 1596.56 842.499 1588.7C846.226 1571.34 850.557 1554.54 853.553 1539.47C857.448 1537.67 860.808 1534.81 862.845 1531.19C899.468 1471.5 936.904 1444.92 984.92 1432.17C919.814 1475.57 880.207 1557.5 880.207 1557.5C880.207 1557.5 1042.7 1611.76 1235.58 1559.94C1235.58 1559.94 1201.94 1473.13 1137.92 1429.73C1204.66 1453.33 1243.72 1513.28 1252.94 1526.03C1255.33 1529.35 1260.18 1531.16 1266.52 1531.62C1269.43 1548.55 1274.62 1568.1 1278.99 1588.43C1257.56 1596.29 1248.33 1635.36 1248.33 1635.36C1248.33 1635.36 1247.86 1636.93 1247.25 1639.7H1547.82C1542.85 1627.43 1533.93 1609.47 1520.42 1596.29C1497.91 1574.32 1458.84 1568.62 1431.72 1581.37C1405.94 1566.45 1379.9 1578.12 1379.9 1578.12L1341.55 1499.67C1347.63 1492.93 1351.99 1485.29 1353.59 1476.93C1361.45 1436.51 1350.6 1316.6 1331.89 1240.38C1330.8 1235.49 1335.95 1231.69 1340.3 1234.14C1354.4 1240.1 1373.39 1251.23 1391.57 1262.89ZM727.477 801.176L837.074 909.687C840.503 902.6 835.84 868.732 843.544 834.875C850.269 795.257 869.615 752.807 913.574 716.537C921.984 709.755 929.851 703.787 936.633 698.361C937.621 697.614 938.843 696.682 940.256 695.604C940.351 695.532 940.446 695.459 940.542 695.386C944.46 692.395 949.783 688.333 955.679 683.967C968.663 674.355 984.432 663.272 994.133 658.921C975.858 645.464 929.3 655.634 906.792 669.334C854.583 602.031 817.952 603.662 798.875 612.817C796.785 609.53 795.073 606.426 793.782 603.581C791.352 603.738 788.686 603.713 785.531 602.871C782.818 602.329 776.036 597.988 774.137 595.004C775.222 601.244 777.664 618.605 783.632 624.845L704.961 713.824C684.615 735.798 706.589 780.287 727.477 801.176ZM1061.42 344.072C1056.27 341.63 1050.84 339.46 1045.42 337.561C1043.52 337.018 1041.35 336.476 1039.18 335.933C1026.7 344.885 1014.49 353.566 1002.55 361.976L1061.42 344.072ZM1150.94 552.956C1159.62 547.802 1168.3 542.376 1176.71 536.679C1179.2 535.096 1181.64 533.465 1184.04 531.865C1187.39 529.629 1190.64 527.455 1193.8 525.557C1193.53 523.658 1192.99 521.759 1192.45 520.131C1191.09 515.248 1189.74 510.365 1188.11 505.482C1184.85 495.716 1181.33 486.221 1177.26 476.998C1173.19 467.775 1168.58 458.822 1163.15 450.955C1157.72 443.088 1151.21 436.035 1143.89 432.237L1140.63 430.609L1139.28 427.625C1129.51 405.38 1115.13 385.035 1097.23 369.029C1087.61 397.242 1071.64 433.919 1048.04 455.177C1042.37 460.287 1036.25 464.507 1029.68 467.503C987.276 486.779 899.93 483.798 826.566 527.936C817.329 533.494 808.314 539.798 799.637 546.988L792.584 551.871L800.722 571.945C800.722 571.945 796.851 574.503 793.331 578.118C789.878 581.664 786.763 586.228 787.972 590.392C787.999 590.471 788.02 590.537 788.037 590.592C788.096 590.776 788.119 590.845 788.166 590.88C788.195 590.901 788.233 590.909 788.294 590.922C788.417 590.948 788.634 590.994 789.057 591.206C789.53 591.324 790.209 591.391 790.982 591.406C791.982 591.426 793.14 591.359 794.212 591.206C798.281 590.392 802.893 589.036 807.504 587.137C816.728 583.61 824.866 578.727 834.904 573.844C844.398 568.961 854.436 565.163 864.744 561.908C875.324 558.924 885.904 556.483 896.755 555.669C907.606 554.312 918.729 554.584 929.58 555.669C951.553 558.11 972.713 565.164 991.702 576.557C996.314 579.27 1001.74 582.797 1005.54 585.781L1011.78 590.392C1013.13 591.477 1015.03 592.563 1016.66 593.376C1023.71 596.632 1032.39 597.446 1041.62 596.903C1060.06 595.547 1079.33 588.765 1097.5 580.898C1099.57 580.002 1101.64 579.082 1103.7 578.139C1119.75 570.8 1135.56 562.091 1150.94 552.956Z\" fill=\"#010103\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1045.42 337.561C1050.84 339.46 1056.27 341.63 1061.42 344.072L1002.55 361.976C1014.49 353.566 1026.7 344.885 1039.18 335.933C1041.35 336.476 1043.52 337.018 1045.42 337.561Z\" fill=\"#010103\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M304.011 2036.03V1651.09C304.011 1644.85 309.166 1639.7 315.405 1639.7H1804.45C1810.69 1639.7 1815.85 1644.85 1815.85 1651.09V2036.03C1815.85 2042.27 1810.69 2047.43 1804.45 2047.43H315.405C309.166 2047.43 304.011 2042.27 304.011 2036.03ZM487.124 1801.11V1811.15H516.151V1800.84C516.151 1785.1 511.268 1773.17 501.773 1764.49C492.278 1756.08 480.885 1751.74 467.863 1751.74C454.842 1751.74 443.72 1756.08 433.954 1764.76C424.188 1773.44 419.305 1785.37 419.305 1800.84V1907.18C419.305 1922.91 424.188 1934.85 433.682 1943.53C443.177 1951.94 454.571 1956.28 467.592 1956.28C480.613 1956.28 491.736 1951.94 501.502 1943.26C511.268 1934.58 516.151 1922.64 516.151 1907.18V1843.97H464.337V1869.47H487.124V1907.45C487.124 1914.23 485.496 1919.11 481.699 1922.64C477.901 1926.17 473.289 1927.79 467.592 1927.79C461.895 1927.79 457.284 1926.17 453.486 1922.64C449.959 1919.11 448.06 1913.96 448.06 1907.45V1801.11C448.06 1794.33 449.688 1789.44 453.486 1785.92C457.284 1782.39 461.895 1780.76 467.592 1780.76C473.289 1780.76 478.172 1782.39 481.699 1785.92C485.225 1789.44 487.124 1794.6 487.124 1801.11ZM614.354 1954.65L587.226 1868.66H570.135V1954.65H541.38V1753.36H587.768C621.678 1753.36 638.769 1773.17 638.769 1812.5C638.769 1824.71 636.87 1835.02 633.072 1843.16C629.274 1851.29 622.763 1857.81 613.811 1862.96L645.008 1954.92L614.354 1954.65ZM585.056 1780.49H570.135V1843.16H586.412C595.636 1843.16 601.875 1840.71 604.859 1835.56C607.843 1830.68 609.471 1822.54 609.471 1811.69C609.471 1800.57 607.843 1792.43 604.588 1787.54C601.604 1782.93 595.093 1780.49 585.056 1780.49ZM741.312 1942.72C750.264 1933.76 754.876 1922.64 754.876 1909.35V1753.36H726.12V1906.64C726.12 1920.47 720.152 1927.52 708.216 1927.52C702.79 1927.52 698.45 1925.62 695.195 1922.1C691.939 1918.57 690.312 1913.42 690.312 1906.64V1753.36H661.556V1909.35C661.556 1922.64 666.168 1933.76 675.12 1942.72C684.072 1951.67 695.195 1956.28 708.216 1956.28C721.237 1956.28 732.36 1951.67 741.312 1942.72ZM874.238 1838.27C873.153 1844.24 870.712 1850.21 866.914 1856.18C863.116 1862.42 857.962 1867.03 851.18 1870.83C844.398 1874.35 835.988 1876.25 825.68 1876.25H811.031V1954.92H782.275V1753.63H825.408C833.818 1753.63 840.871 1754.72 846.568 1756.89C852.265 1759.06 857.69 1762.59 862.573 1767.74C867.456 1772.9 870.983 1778.86 872.611 1785.92C874.51 1792.97 875.324 1802.74 875.324 1814.94C875.595 1824.44 875.324 1832.3 874.238 1838.27ZM825.951 1780.49H811.031V1848.85H824.866C835.446 1848.85 841.956 1846.14 844.669 1840.99C847.382 1835.83 848.738 1827.15 848.738 1814.94C848.738 1803.01 847.382 1794.05 844.94 1788.63C842.499 1783.2 836.259 1780.49 825.951 1780.49ZM981.936 1856.18C985.734 1850.21 988.175 1844.24 989.26 1838.27C990.346 1832.3 990.888 1824.44 990.346 1814.94C990.346 1802.74 989.532 1792.97 987.633 1785.92C986.005 1778.86 982.479 1772.9 977.596 1767.74C972.713 1762.59 967.287 1759.06 961.59 1756.89C955.893 1754.72 948.84 1753.63 940.43 1753.63H897.297V1954.92H926.053V1876.25H940.702C951.01 1876.25 959.42 1874.35 966.202 1870.83C972.984 1867.03 978.138 1862.42 981.936 1856.18ZM926.053 1780.49H940.973C951.282 1780.49 957.521 1783.2 959.962 1788.63C962.404 1794.05 963.76 1803.01 963.76 1814.94C963.76 1827.15 962.404 1835.83 959.691 1840.99C956.978 1846.14 950.468 1848.85 939.888 1848.85H926.053V1780.49ZM1098.31 1780.49H1041.07V1839.9H1090.72V1867.03H1041.07V1925.9H1098.31V1954.65H1012.32V1753.36H1098.31V1780.49ZM1233.14 1911.52L1241.55 1954.65H1270.85L1225.82 1753.36H1201.67L1156.64 1954.65H1185.67L1194.08 1911.52H1233.14ZM1227.71 1884.39H1198.96L1213.61 1811.69L1227.71 1884.39ZM1378 1899.58C1378 1917.76 1373.39 1931.59 1364.17 1940.82C1354.94 1950.04 1341.92 1954.65 1324.83 1954.65H1284.68V1753.36H1327.27C1343.55 1753.36 1356.03 1757.97 1364.71 1767.2C1373.39 1776.42 1377.73 1789.17 1377.73 1805.45V1899.58H1378ZM1326.73 1780.49H1313.44V1927.52H1326.73C1334.87 1927.52 1340.57 1925.62 1344.09 1921.56C1347.62 1917.49 1349.25 1911.25 1349.25 1902.29V1805.18C1349.25 1796.77 1347.62 1790.8 1344.09 1786.46C1340.57 1782.66 1334.87 1780.49 1326.73 1780.49ZM1404.86 1954.65H1490.85V1925.9H1433.61V1753.36H1404.86V1954.65ZM1595.57 1780.49H1538.33V1839.9H1587.97V1867.03H1538.33V1925.9H1595.57V1954.65H1509.57V1753.36H1595.57V1780.49ZM1660.13 1868.66L1687.26 1954.65L1717.91 1954.92L1686.72 1862.96C1695.94 1857.81 1702.18 1851.29 1705.98 1843.16C1709.78 1835.02 1711.67 1824.71 1711.67 1812.5C1711.67 1773.17 1694.58 1753.36 1660.67 1753.36H1614.29V1954.65H1643.04V1868.66H1660.13ZM1643.04 1780.49H1658.23C1668 1780.49 1674.78 1782.93 1677.49 1787.54C1680.75 1792.43 1682.38 1800.57 1682.38 1811.69C1682.38 1822.54 1680.75 1830.68 1677.77 1835.56C1674.78 1840.71 1668.54 1843.16 1659.32 1843.16H1643.04V1780.49Z\" fill=\"#010103\"/>\n<path d=\"M487.124 1811.15V1801.11C487.124 1794.6 485.225 1789.44 481.698 1785.92C478.172 1782.39 473.289 1780.76 467.592 1780.76C461.895 1780.76 457.283 1782.39 453.485 1785.92C449.687 1789.44 448.06 1794.33 448.06 1801.11V1907.45C448.06 1913.96 449.959 1919.11 453.485 1922.64C457.283 1926.17 461.895 1927.8 467.592 1927.8C473.289 1927.8 477.9 1926.17 481.698 1922.64C485.496 1919.11 487.124 1914.23 487.124 1907.45V1869.47H464.336V1843.97H516.151V1907.18C516.151 1922.64 511.268 1934.58 501.502 1943.26C491.736 1951.94 480.613 1956.28 467.592 1956.28C454.57 1956.28 443.177 1951.94 433.682 1943.53C424.187 1934.85 419.304 1922.91 419.304 1907.18V1800.84C419.304 1785.37 424.187 1773.44 433.953 1764.76C443.719 1756.08 454.842 1751.74 467.863 1751.74C480.884 1751.74 492.278 1756.08 501.773 1764.49C511.268 1773.17 516.151 1785.1 516.151 1800.84V1811.15H487.124Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M614.353 1954.65L587.226 1868.66H570.135V1954.65H541.379V1753.36H587.768C621.678 1753.36 638.768 1773.17 638.768 1812.5C638.768 1824.71 636.869 1835.02 633.072 1843.16C629.274 1851.29 622.763 1857.81 613.811 1862.96L645.008 1954.92L614.353 1954.65ZM570.135 1780.49H585.055C595.093 1780.49 601.603 1782.93 604.587 1787.54C607.843 1792.43 609.47 1800.57 609.47 1811.69C609.47 1822.54 607.843 1830.68 604.859 1835.56C601.875 1840.71 595.635 1843.16 586.412 1843.16H570.135V1780.49Z\" fill=\"#CECDC4\"/>\n<path d=\"M754.876 1909.35C754.876 1922.64 750.264 1933.76 741.312 1942.72C732.359 1951.67 721.237 1956.28 708.216 1956.28C695.194 1956.28 684.072 1951.67 675.12 1942.72C666.168 1933.76 661.556 1922.64 661.556 1909.35V1753.36H690.311V1906.64C690.311 1913.42 691.939 1918.57 695.194 1922.1C698.45 1925.62 702.79 1927.52 708.216 1927.52C720.152 1927.52 726.12 1920.47 726.12 1906.64V1753.36H754.876V1909.35Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M874.238 1838.27C873.153 1844.24 870.711 1850.21 866.914 1856.18C863.116 1862.42 857.961 1867.03 851.179 1870.83C844.397 1874.35 835.988 1876.25 825.679 1876.25H811.03V1954.92H782.275V1753.63H825.408C833.818 1753.63 840.871 1754.72 846.568 1756.89C852.265 1759.06 857.69 1762.59 862.573 1767.74C867.456 1772.9 870.983 1778.86 872.61 1785.92C874.509 1792.97 875.323 1802.74 875.323 1814.94C875.594 1824.44 875.323 1832.31 874.238 1838.27ZM811.03 1780.49H825.951C836.259 1780.49 842.499 1783.2 844.94 1788.63C847.382 1794.05 848.738 1803.01 848.738 1814.94C848.738 1827.15 847.382 1835.83 844.669 1840.99C841.956 1846.14 835.445 1848.85 824.865 1848.85H811.03V1780.49Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M989.26 1838.27C988.175 1844.24 985.734 1850.21 981.936 1856.18C978.138 1862.42 972.983 1867.03 966.201 1870.83C959.419 1874.35 951.01 1876.25 940.701 1876.25H926.052V1954.92H897.297V1753.63H940.43C948.84 1753.63 955.893 1754.72 961.59 1756.89C967.287 1759.06 972.712 1762.59 977.595 1767.74C982.478 1772.9 986.005 1778.86 987.632 1785.92C989.531 1792.97 990.345 1802.74 990.345 1814.94C990.888 1824.44 990.345 1832.31 989.26 1838.27ZM926.052 1780.49H940.973C951.281 1780.49 957.521 1783.2 959.962 1788.63C962.404 1794.05 963.76 1803.01 963.76 1814.94C963.76 1827.15 962.404 1835.83 959.691 1840.99C956.978 1846.14 950.467 1848.85 939.887 1848.85H926.052V1780.49Z\" fill=\"#CECDC4\"/>\n<path d=\"M1098.31 1780.49H1041.07V1839.9H1090.72V1867.03H1041.07V1925.9H1098.31V1954.65H1012.32V1753.36H1098.31V1780.49Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1241.55 1954.65L1233.14 1911.52H1194.08L1185.67 1954.65H1156.64L1201.67 1753.36H1225.81L1270.85 1954.65H1241.55ZM1227.71 1884.39H1198.96L1213.61 1811.69L1227.71 1884.39Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1378 1899.58C1378 1917.76 1373.39 1931.59 1364.17 1940.82C1354.94 1950.04 1341.92 1954.65 1324.83 1954.65H1284.68V1753.36H1327.27C1343.55 1753.36 1356.03 1757.97 1364.71 1767.2C1373.39 1776.42 1377.73 1789.17 1377.73 1805.45V1899.58H1378ZM1313.44 1780.49H1326.73C1334.87 1780.49 1340.57 1782.66 1344.09 1786.46C1347.62 1790.8 1349.25 1796.77 1349.25 1805.18V1902.29C1349.25 1911.25 1347.62 1917.49 1344.09 1921.56C1340.57 1925.62 1334.87 1927.52 1326.73 1927.52H1313.44V1780.49Z\" fill=\"#CECDC4\"/>\n<path d=\"M1490.85 1954.65H1404.86V1753.36H1433.61V1925.9H1490.85V1954.65Z\" fill=\"#CECDC4\"/>\n<path d=\"M1595.57 1780.49H1538.33V1839.9H1587.97V1867.03H1538.33V1925.9H1595.57V1954.65H1509.57V1753.36H1595.57V1780.49Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1687.26 1954.65L1660.13 1868.66H1643.04V1954.65H1614.29V1753.36H1660.67C1694.58 1753.36 1711.67 1773.17 1711.67 1812.5C1711.67 1824.71 1709.78 1835.02 1705.98 1843.16C1702.18 1851.29 1695.94 1857.81 1686.72 1862.96L1717.91 1954.92L1687.26 1954.65ZM1643.04 1780.49H1658.23C1668 1780.49 1674.78 1782.93 1677.49 1787.54C1680.75 1792.43 1682.38 1800.57 1682.38 1811.69C1682.38 1822.54 1680.75 1830.68 1677.76 1835.56C1674.78 1840.71 1668.54 1843.16 1659.32 1843.16H1643.04V1780.49Z\" fill=\"#CECDC4\"/>\n<path d=\"M1475.39 1589.51C1502.52 1595.48 1516.35 1614.74 1525.04 1635.36C1525.59 1636.68 1526.02 1638.14 1526.32 1639.7H1465.82C1466.45 1642.94 1466.54 1646.64 1466.21 1650.62C1464.22 1674.62 1446.78 1708.81 1436.33 1712.94C1423.31 1718.1 1414.9 1701.55 1414.9 1659.5C1414.9 1643.81 1375.27 1640.34 1350.59 1639.7C1341.67 1639.47 1334.71 1639.6 1332.27 1639.67C1331.67 1639.69 1331.34 1639.7 1331.34 1639.7H1262.68C1262.94 1638.14 1263.31 1636.68 1263.79 1635.36C1269.51 1619.84 1277.99 1605.1 1292.24 1596.2C1291.4 1565.95 1284.91 1534.46 1279.53 1513.55C1275.19 1496.19 1288.75 1478.56 1306.38 1480.19C1314.52 1480.73 1321.58 1485.07 1324.02 1496.19C1324.02 1496.19 1351.09 1558.95 1374.44 1594.3C1386.85 1590.01 1402.03 1586.68 1414.9 1589.51C1421.09 1590.87 1426.59 1592.93 1431.49 1595.53C1444.45 1590.7 1461.31 1586.41 1475.39 1589.51Z\" fill=\"#CC7910\"/>\n<path d=\"M646.364 1589.51C619.236 1595.48 605.401 1614.74 596.72 1635.36C596.162 1636.68 595.739 1638.14 595.438 1639.7H655.943C651.575 1662.44 673.257 1708.11 685.44 1712.93C689.157 1714.41 692.498 1714.11 695.375 1711.95C702.57 1706.55 706.859 1689.53 706.859 1659.5C706.859 1655.9 708.724 1652.94 711.897 1650.51C726.046 1639.64 766.278 1639.32 783.127 1639.7H859.076C858.818 1638.14 858.45 1636.68 857.961 1635.36C852.21 1619.75 843.659 1604.91 829.247 1596.04C830.111 1565.83 836.584 1534.42 841.956 1513.55C846.296 1496.19 832.732 1478.56 815.099 1480.19C806.961 1480.73 799.908 1485.07 797.466 1496.19C797.466 1496.19 770.436 1558.86 747.099 1594.22C734.73 1589.97 719.649 1586.7 706.859 1589.51C700.666 1590.87 695.166 1592.93 690.262 1595.53C677.303 1590.7 660.445 1586.41 646.364 1589.51Z\" fill=\"#CC7910\"/>\n<path d=\"M1503.06 1616.91C1493.3 1607.14 1476.48 1611.76 1485.97 1626.68C1495.19 1641.6 1498.45 1641.05 1515.27 1661.67C1522.86 1647.84 1512.56 1626.68 1503.06 1616.91Z\" fill=\"#010103\"/>\n<path d=\"M1453.15 1656.25C1450.43 1643.22 1434.43 1637.8 1433.89 1654.89C1433.34 1671.98 1440.13 1663.3 1438.77 1698.84C1452.33 1691.78 1455.59 1669.27 1453.15 1656.25Z\" fill=\"#010103\"/>\n<path d=\"M618.151 1615.55C628.46 1606.33 645.008 1611.76 634.971 1626.13C624.933 1640.51 621.678 1639.97 603.774 1659.77C596.992 1645.39 608.114 1624.78 618.151 1615.55Z\" fill=\"#010103\"/>\n<path d=\"M670.508 1657.33C672.136 1644.04 687.87 1637.53 689.498 1654.62C691.125 1671.71 680.545 1670.62 687.87 1703.72C673.492 1697.48 668.88 1670.62 670.508 1657.33Z\" fill=\"#010103\"/>\n<path d=\"M880.618 573.759C882.244 592.1 897.823 606.669 916.558 606.669C933.772 606.669 948.193 594.701 951.954 578.804C947.657 577.328 943.284 576.061 938.85 575.004C936.653 585.217 927.429 592.834 916.558 592.834C904.631 592.834 894.934 583.664 894.1 571.958C889.589 572.343 885.086 572.953 880.618 573.759Z\" fill=\"white\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1061.42 344.071C1056.27 341.63 1050.84 339.46 1045.42 337.561C1043.52 337.018 1041.35 336.476 1039.18 335.933C1026.7 344.885 1014.49 353.566 1002.55 361.976L1061.42 344.071Z\" fill=\"#CECDC4\"/>\n<path d=\"M1150.94 552.956C1159.62 547.802 1168.3 542.376 1176.71 536.679C1182.68 532.881 1188.38 528.812 1193.81 525.557C1193.53 523.658 1192.99 521.759 1192.45 520.131C1191.09 515.248 1189.74 510.365 1188.11 505.482C1184.85 495.716 1181.33 486.221 1177.26 476.998C1173.19 467.774 1168.58 458.822 1163.15 450.955C1157.73 443.088 1151.21 436.035 1143.89 432.237L1140.63 430.609L1139.28 427.625C1129.51 405.38 1115.13 385.034 1097.23 369.029C1093.15 380.992 1087.93 394.477 1081.47 407.662L1102.66 405.652C1102.66 405.652 1064.13 488.663 1016.39 503.312C959.711 520.537 925.569 523.376 899.583 525.537C863.26 528.558 842.873 530.253 799.149 568.063L800.723 571.945C800.723 571.945 785.531 581.983 787.973 590.392C788.244 591.206 787.973 590.664 789.058 591.206C790.143 591.477 792.313 591.477 794.212 591.206C798.281 590.392 802.893 589.036 807.505 587.137C816.728 583.61 824.867 578.727 834.904 573.844C844.399 568.961 854.436 565.163 864.744 561.908C875.324 558.924 885.904 556.482 896.755 555.669C907.606 554.312 918.729 554.584 929.58 555.669C951.554 558.11 972.713 565.163 991.703 576.557C996.314 579.27 1001.74 582.796 1005.54 585.781L1011.78 590.392C1013.13 591.477 1015.03 592.562 1016.66 593.376C1023.71 596.632 1032.39 597.445 1041.62 596.903C1060.06 595.547 1079.33 588.765 1097.5 580.897C1115.68 573.03 1133.58 563.264 1150.94 552.956Z\" fill=\"#CECDC4\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1102.65 405.652L1081.47 407.663C1069.03 433.049 1052 457.326 1029.68 467.503C1013.57 474.827 990.971 478.938 965.116 483.641C914.354 492.874 851.041 504.391 799.637 546.988L792.584 551.871L799.148 568.063C842.873 530.253 863.26 528.558 899.583 525.538C925.569 523.377 959.711 520.538 1016.39 503.312C1064.13 488.663 1102.65 405.652 1102.65 405.652Z\" fill=\"#A7A49B\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M899.583 525.538C863.26 528.558 842.873 530.253 799.148 568.063L792.584 551.871L799.637 546.988C851.041 504.391 914.354 492.874 965.116 483.641C990.971 478.938 1013.57 474.827 1029.68 467.503C1052 457.326 1069.03 433.049 1081.47 407.663L1102.65 405.652C1102.65 405.652 1064.13 488.663 1016.39 503.312C959.711 520.538 925.569 523.377 899.583 525.538Z\" fill=\"#A7A49B\"/>\n<path d=\"M1141.72 463.705L1162.34 510.365C1164.23 514.706 1162.34 519.589 1158 521.488L1157.72 521.759L1157.18 522.03L1089.63 547.802H1089.36C1085.29 549.429 1080.95 547.259 1079.32 543.19C1079.32 542.919 1079.05 542.376 1079.05 542.105L1066.03 485.408V485.136C1065.22 481.881 1067.39 478.354 1070.64 477.541L1134.94 459.907C1137.65 459.094 1140.63 460.45 1141.72 463.163V463.705Z\" fill=\"#010103\"/>\n<path d=\"M1072.27 484.051L1136.29 465.604L1143.62 482.424L1077.43 504.397L1072.27 484.051Z\" fill=\"#010103\"/>\n<path d=\"M1077.43 504.397L1143.62 482.424L1149.04 497.615L1082.58 524.201L1077.43 504.397Z\" fill=\"#C1000C\"/>\n<path d=\"M1082.58 524.2L1149.04 497.615L1153.93 513.349L1086.92 540.206L1082.58 524.2Z\" fill=\"#EEB11B\"/>\n<path d=\"M783.632 624.574C783.632 624.574 827.036 566.52 906.792 669.334C929.3 655.634 975.858 645.464 994.133 658.921C978.301 666.023 946.307 691.052 936.633 698.361C929.851 703.787 921.984 709.755 913.574 716.537C869.615 752.807 850.269 795.256 843.544 834.875C835.84 868.732 840.503 902.6 837.074 909.687L727.477 801.176C706.589 780.287 684.615 735.798 704.961 713.824L783.632 624.845L783.436 624.647L783.632 624.574Z\" fill=\"#D18D1E\"/>\n<path d=\"M853.622 679.1C846.297 687.781 806.691 664.994 795.026 657.941C793.669 657.127 793.941 655.228 795.568 654.685C805.063 651.973 829.749 644.919 840.058 647.632C853.079 651.43 862.303 669.063 853.622 679.1Z\" fill=\"#854205\"/>\n<path d=\"M845.755 672.319C839.787 679.1 803.707 658.212 803.707 656.584C803.707 654.685 827.85 648.717 836.531 651.159C845.483 653.329 851.723 665.265 845.755 672.319Z\" fill=\"#010103\"/>\n<path d=\"M1093.43 595.004C1079.33 600.158 1069.29 606.126 1063.32 607.754C1061.69 608.297 1060.61 609.924 1060.88 611.823C1079.05 746.106 1092.89 752.346 1100.21 755.33C1107.81 758.314 1134.67 742.308 1137.65 734.441C1143.89 716.537 1105.64 705.957 1096.69 597.174C1096.42 595.546 1095.06 594.461 1093.43 595.004ZM1087.46 694.563C1088.28 689.409 1093.16 685.611 1098.31 686.425C1103.47 687.239 1107 691.85 1106.45 697.276C1105.64 702.43 1101.03 705.957 1095.87 705.414C1090.45 704.6 1086.65 699.717 1087.46 694.563ZM1108.89 738.51C1103.2 737.696 1099.13 732.542 1099.94 726.845C1100.76 721.148 1105.91 717.351 1111.61 717.893C1117.3 718.707 1121.1 723.861 1120.56 729.558C1119.75 735.255 1114.59 739.324 1108.89 738.51Z\" fill=\"#CECDC4\"/>\n<path d=\"M1000.38 675.303C1001.2 674.489 1001.74 673.675 1002.01 672.319C1002.24 670.353 1001.98 668.436 1001.23 666.674C977.988 678.205 953.705 699.713 943.686 707.585L943.327 707.857C936.627 712.949 928.894 718.826 920.898 725.489C896.325 745.802 879.894 768.178 869.268 790.845L1000.38 675.303Z\" fill=\"#854605\"/>\n<g opacity=\"0.1\">\n<path d=\"M1272.48 1512.2C1275.19 1506.77 1278.72 1502.43 1283.33 1498.63C1287.67 1494.83 1293.09 1491.85 1299.06 1490.22C1305.03 1488.87 1311.54 1489.14 1316.97 1490.77C1319.95 1491.31 1322.39 1492.94 1325.1 1494.02C1327.55 1495.38 1329.99 1497.28 1332.16 1498.63C1334.06 1499.99 1334.6 1502.43 1333.24 1504.33C1332.16 1505.96 1329.99 1506.5 1328.09 1505.69L1327.55 1505.41C1323.2 1503.24 1318.86 1501.07 1314.25 1499.99C1309.91 1498.63 1305.3 1499.18 1301.23 1499.99C1296.89 1500.8 1292.82 1502.97 1289.3 1505.96C1285.77 1508.94 1282.24 1512.74 1279.8 1516.27L1279.53 1516.54C1278.17 1518.44 1275.46 1518.98 1273.29 1517.62C1271.93 1516.54 1271.39 1514.1 1272.48 1512.2Z\" fill=\"#010103\"/>\n<path d=\"M1275.46 1530.64C1278.99 1524.95 1283.06 1520.61 1288.21 1516.81C1293.36 1513.01 1299.06 1510.03 1305.57 1508.67C1312.08 1507.31 1318.86 1507.58 1324.83 1509.48C1328.09 1510.03 1330.8 1511.65 1333.78 1512.74C1336.5 1514.1 1339.21 1515.72 1341.65 1517.35C1343.55 1518.44 1344.09 1520.88 1343.01 1522.78C1341.92 1524.68 1339.75 1525.22 1337.85 1524.4L1337.31 1524.13C1332.43 1521.96 1327.55 1519.79 1322.39 1518.71C1317.51 1517.35 1312.35 1517.89 1307.47 1518.71C1302.59 1519.52 1297.98 1521.69 1293.91 1524.68C1289.84 1527.66 1285.77 1531.46 1282.78 1535.26L1282.51 1535.53C1281.16 1537.43 1278.17 1537.7 1276.27 1536.34C1274.65 1534.98 1274.37 1532.54 1275.46 1530.64Z\" fill=\"#010103\"/>\n<path d=\"M1278.17 1548.82C1282.24 1542.85 1287.12 1538.51 1292.82 1534.71C1298.52 1530.91 1305.03 1528.2 1311.81 1526.85C1318.59 1525.76 1325.92 1526.03 1332.43 1527.66C1335.95 1528.2 1338.94 1529.83 1341.92 1530.64C1344.91 1532 1347.89 1533.63 1350.6 1535.26C1352.5 1536.34 1353.32 1538.78 1352.23 1540.68C1351.15 1542.58 1348.98 1543.39 1347.08 1542.58L1346.53 1542.31C1341.11 1540.14 1335.68 1537.97 1329.99 1536.88C1324.29 1535.53 1318.86 1536.07 1313.44 1536.88C1308.01 1537.7 1302.86 1539.87 1297.98 1542.85C1293.36 1545.83 1288.48 1549.63 1285.23 1553.7L1284.95 1553.97C1283.33 1555.87 1280.61 1556.14 1278.72 1554.52C1277.36 1553.43 1277.09 1550.72 1278.17 1548.82Z\" fill=\"#010103\"/>\n<path d=\"M1281.16 1567.27C1285.77 1561.03 1291.47 1556.69 1297.7 1552.89C1303.94 1549.36 1311 1546.65 1318.32 1545.29C1325.65 1544.48 1333.24 1544.48 1340.3 1546.38C1343.82 1546.92 1347.35 1548.28 1350.6 1549.36C1353.86 1550.72 1357.11 1552.35 1360.1 1553.97C1362 1555.06 1362.81 1557.23 1362 1559.4C1361.18 1561.3 1359.01 1562.11 1356.84 1561.57L1356.3 1561.3C1350.33 1559.13 1344.09 1556.96 1338.12 1555.87C1331.89 1554.52 1325.65 1554.79 1319.68 1555.6C1313.71 1556.41 1307.74 1558.59 1302.32 1561.3C1296.89 1564.28 1291.74 1568.35 1287.94 1572.42L1287.67 1572.69C1286.04 1574.59 1283.33 1574.59 1281.43 1572.96C1280.07 1571.61 1279.8 1569.16 1281.16 1567.27Z\" fill=\"#010103\"/>\n<path d=\"M1284.14 1585.71C1289.57 1579.2 1295.53 1574.86 1302.59 1571.06C1309.64 1567.54 1316.97 1565.1 1324.83 1564.01C1332.7 1563.2 1340.57 1563.47 1348.16 1565.1C1351.96 1565.64 1355.49 1566.99 1359.28 1568.08C1362.81 1569.44 1366.34 1571.06 1369.86 1572.42C1372.03 1573.23 1372.85 1575.68 1372.03 1577.85C1371.22 1579.74 1369.05 1580.83 1367.15 1580.02H1366.88C1360.1 1577.85 1353.59 1575.68 1346.81 1574.59C1340.02 1573.23 1333.24 1573.51 1326.73 1574.32C1319.95 1575.13 1313.71 1577.03 1307.47 1580.02C1301.5 1583 1295.81 1587.07 1291.19 1591.41L1290.92 1591.68C1289.29 1593.31 1286.31 1593.31 1284.68 1591.68C1282.78 1590.05 1282.51 1587.34 1284.14 1585.71Z\" fill=\"#010103\"/>\n<path d=\"M841.414 1516.54C838.973 1513.01 835.446 1509.21 831.919 1506.23C828.393 1503.24 824.324 1501.07 819.983 1500.26C815.914 1499.18 811.302 1498.9 806.962 1500.26C802.621 1501.35 798.281 1503.24 793.669 1505.69L793.127 1505.96C791.228 1507.04 788.786 1506.23 787.701 1504.06C786.887 1502.16 787.43 1499.99 789.057 1498.9C791.499 1497.28 793.669 1495.65 796.111 1494.29C798.824 1493.21 801.265 1491.58 804.249 1491.04C809.946 1489.14 816.185 1488.87 822.153 1490.49C828.122 1492.12 833.547 1495.11 837.888 1498.9C842.499 1502.7 845.755 1507.04 848.739 1512.47C849.824 1514.64 849.01 1517.35 846.84 1518.44C844.941 1519.52 842.499 1518.98 841.143 1517.08L841.414 1516.54Z\" fill=\"#010103\"/>\n<path d=\"M838.701 1535.26C835.717 1531.46 831.648 1527.66 827.579 1524.68C823.51 1521.69 818.627 1519.52 814.015 1518.71C809.132 1517.89 804.249 1517.35 799.095 1518.71C793.94 1519.79 789.057 1521.69 784.174 1524.13L783.632 1524.4C781.733 1525.22 779.291 1524.4 778.206 1522.51C777.392 1520.61 777.935 1518.44 779.834 1517.35C782.547 1515.72 784.988 1514.1 787.701 1512.74C790.685 1511.65 793.398 1510.3 796.653 1509.48C802.621 1507.58 809.403 1507.58 815.914 1508.67C822.425 1510.03 828.121 1513.01 833.276 1516.81C838.43 1520.61 842.499 1524.95 846.026 1530.64C847.382 1532.81 846.568 1535.53 844.398 1536.61C842.499 1537.7 840.058 1537.15 838.701 1535.53V1535.26Z\" fill=\"#010103\"/>\n<path d=\"M835.988 1553.97C832.462 1549.9 827.85 1546.11 823.238 1543.12C818.355 1540.14 813.201 1538.24 807.776 1537.15C802.35 1536.34 796.653 1536.07 791.228 1537.15C785.531 1538.24 780.105 1540.14 774.68 1542.58L774.137 1542.85C771.967 1543.66 769.797 1542.85 768.983 1540.68C768.169 1538.78 768.983 1536.61 770.882 1535.53C773.866 1533.9 776.579 1532.27 779.563 1530.91C782.818 1529.83 785.802 1528.47 789.057 1527.93C795.568 1526.3 802.893 1526.03 809.675 1527.12C816.456 1528.47 822.967 1531.19 828.664 1534.98C834.361 1538.78 839.244 1543.12 843.313 1549.09C844.669 1550.99 844.127 1553.97 842.228 1555.06C840.329 1556.41 837.887 1555.87 836.531 1554.24L835.988 1553.97Z\" fill=\"#010103\"/>\n<path d=\"M833.547 1572.69C829.749 1568.62 824.324 1564.55 819.17 1561.57C813.744 1558.59 807.776 1556.69 801.808 1555.87C795.84 1555.06 789.6 1554.79 783.361 1556.14C777.121 1557.23 771.153 1559.13 765.185 1561.57L764.643 1561.84C762.472 1562.65 760.302 1561.57 759.488 1559.4C758.674 1557.5 759.76 1555.33 761.387 1554.24C764.643 1552.62 767.627 1550.99 770.882 1549.63C774.409 1548.55 777.664 1547.19 781.191 1546.65C788.244 1545.02 795.84 1544.75 803.164 1545.56C810.489 1546.65 817.542 1549.36 823.781 1553.16C830.292 1556.96 835.718 1561.3 840.329 1567.54C841.686 1569.44 841.414 1572.15 839.515 1573.78C837.616 1575.13 835.175 1574.86 833.547 1573.23V1572.69Z\" fill=\"#010103\"/>\n<path d=\"M830.834 1591.41C826.494 1587.07 820.526 1583 814.558 1580.02C808.59 1577.03 802.079 1575.13 795.297 1574.32C788.786 1573.51 781.733 1573.23 775.222 1574.59C768.44 1575.68 761.93 1577.57 755.148 1580.02H754.876C752.706 1580.83 750.536 1579.47 749.722 1577.57C749.18 1575.68 749.993 1573.51 751.892 1572.69C755.419 1571.34 758.674 1569.71 762.472 1568.35C766.27 1567.54 769.797 1565.91 773.595 1565.37C781.19 1563.74 789.058 1563.47 796.925 1564.28C804.792 1565.37 812.387 1567.81 819.169 1571.34C826.223 1574.86 832.191 1579.47 837.616 1585.98C839.244 1587.88 838.973 1590.6 837.074 1592.22C835.446 1593.58 832.733 1593.58 831.106 1591.95L830.834 1591.41Z\" fill=\"#010103\"/>\n</g>\n<g opacity=\"0.1\">\n<path d=\"M1453.96 1659.77C1453.96 1645.39 1436.06 1639.7 1431.72 1648.38C1427.65 1657.06 1432.53 1672.79 1429.54 1701.55C1445.82 1696.94 1453.96 1674.15 1453.96 1659.77Z\" fill=\"#010103\"/>\n<path d=\"M672.407 1663.3C672.407 1648.92 685.428 1639.97 690.04 1648.38C697.907 1662.48 689.226 1672.79 692.21 1701.55C675.933 1696.94 672.407 1677.68 672.407 1663.3Z\" fill=\"#010103\"/>\n<path d=\"M1465.9 1639.7C1465.9 1639.7 1459.93 1613.93 1434.97 1601.45C1456.4 1591.41 1453.15 1594.94 1453.15 1594.94C1479.75 1600.68 1492.83 1628.13 1497.23 1639.7C1498.44 1642.87 1498.99 1644.85 1498.99 1644.85L1465.9 1639.7Z\" fill=\"#010103\"/>\n<path d=\"M1299.87 1641.05L1399.43 1646.21C1399.43 1645.94 1329.17 1589.78 1299.87 1641.05Z\" fill=\"#010103\"/>\n<path d=\"M657.215 1643.22C657.215 1643.22 665.354 1614.2 690.04 1601.45C679.731 1596.02 675.391 1597.92 675.391 1597.92C657.739 1605.34 643.464 1620.48 631.203 1639.7C630.462 1640.86 629.729 1642.03 629.002 1643.22H657.215Z\" fill=\"#010103\"/>\n<path d=\"M826.493 1641.05L722.322 1646.48C722.593 1646.48 797.466 1589.78 826.493 1641.05Z\" fill=\"#010103\"/>\n<path d=\"M832.732 1485.34C832.732 1485.34 835.717 1488.6 834.36 1504.06C833.004 1519.79 816.185 1590.05 816.185 1590.05L829.477 1596.02L846.568 1504.06C846.568 1504.33 838.158 1487.24 832.732 1485.34Z\" fill=\"#010103\"/>\n<path d=\"M1286.04 1487.24C1286.04 1487.24 1283.05 1490.49 1284.41 1505.96C1285.77 1521.42 1302.59 1591.95 1302.59 1591.95L1289.29 1597.92L1272.2 1505.96C1272.2 1505.96 1280.61 1488.87 1286.04 1487.24Z\" fill=\"#010103\"/>\n</g>\n<path d=\"M986.277 735.798C984.378 759.399 977.053 798.192 977.053 798.192C977.053 798.192 937.989 834.543 935.005 850.277C949.926 837.798 963.489 837.256 963.489 837.256L955.351 890.426C955.351 890.426 909.234 939.799 908.691 951.735C921.17 946.852 939.074 944.411 939.074 944.411C939.074 944.411 920.627 1008.43 917.101 1023.9C895.127 1038.82 850.909 1097.95 850.909 1097.95C850.909 1097.95 907.877 1065.94 900.553 1087.1C893.228 1108.26 859.319 1185.03 859.319 1185.03C859.319 1185.03 819.983 1221.66 790.143 1274.29C806.148 1263.98 822.967 1253.94 834.904 1247.43C839.787 1244.72 845.212 1249.87 842.771 1254.75C810.488 1321.76 787.43 1390.39 771.696 1460.38C770.068 1467.98 770.068 1476.12 772.238 1483.71C773.782 1488.97 776 1495.24 779 1501.72L776.036 1507.86C757.663 1507.86 752.43 1503.6 751.164 1502.12C751.146 1501.95 751.118 1501.79 751.079 1501.62C748.366 1491.31 745.653 1486.43 749.18 1469.33C760.302 1412.64 768.44 1352.68 811.031 1285.14C789.6 1296.26 754.605 1325.83 711.743 1373.3C744.568 1291.92 824.324 1187.75 872.069 1124.27C873.696 1119.11 875.053 1114.23 876.68 1109.08C858.776 1119.66 820.797 1140.27 789.058 1175.27C812.93 1116.4 865.016 1046.95 909.505 993.512C911.675 985.103 914.117 976.693 916.287 968.555C901.096 979.948 868.271 997.039 846.569 1020.64C864.202 976.964 890.787 926.506 937.989 883.373C939.617 876.862 941.245 870.623 942.601 864.384C928.766 875.506 900.553 887.442 882.106 907.517C897.298 869.809 923.612 819.352 962.404 790.325C974.356 737.869 975.654 706.722 975.727 697.031L986.198 687.803C986.842 702.236 987.373 722.179 986.277 735.798Z\" fill=\"#CECDC4\"/>\n<path d=\"M1379.09 1486.43C1367.42 1505.41 1349.79 1507.58 1341.38 1501.62L1341.55 1499.67C1347.63 1492.93 1351.99 1485.29 1353.59 1476.93C1361.45 1436.51 1350.6 1316.6 1331.89 1240.38C1330.8 1235.49 1335.95 1231.69 1340.3 1234.14C1354.4 1240.1 1373.39 1251.23 1391.57 1262.89C1361.73 1210.26 1322.39 1173.64 1322.39 1173.64C1322.39 1173.64 1288.48 1097.14 1281.16 1075.71C1273.83 1054.55 1330.8 1086.56 1330.8 1086.56C1330.8 1086.56 1286.85 1027.69 1264.61 1012.5C1261.08 997.039 1242.63 933.017 1242.63 933.017C1242.63 933.017 1260.54 935.458 1273.02 940.342C1272.48 928.405 1226.36 879.033 1226.36 879.033L1218.22 825.862C1218.22 825.862 1232.06 826.676 1246.7 838.883C1243.72 823.149 1213.61 796.564 1204.66 786.798C1198.95 719.655 1174.97 617.906 1158.63 572.026C1162.61 569.472 1166.6 566.89 1170.53 564.334L1171.29 565.435C1197.87 632.712 1211.44 704.058 1220.93 778.66C1259.73 807.686 1286.04 858.416 1301.23 895.852C1283.06 875.777 1254.57 863.841 1240.74 852.719C1242.36 858.958 1243.72 865.198 1245.35 871.708C1292.55 914.841 1319.14 965.299 1336.77 1008.98C1315.07 985.103 1282.24 968.283 1267.05 956.89C1269.22 965.028 1271.39 973.438 1273.83 981.847C1318.32 1035.56 1370.68 1105.01 1394.28 1163.6C1362.54 1128.61 1324.56 1107.99 1306.66 1097.41C1308.28 1102.57 1309.64 1107.45 1311.27 1112.6C1359.28 1175.81 1440.13 1286.76 1473.22 1368.15C1430.36 1320.95 1385.33 1285.41 1363.9 1274.29C1384.78 1334.24 1386.41 1430.54 1379.36 1485.88C1379.34 1485.99 1379.34 1486.09 1379.33 1486.19L1379.09 1486.43Z\" fill=\"#CECDC4\"/>\n`;\n\n/**\n * @param {string} text Text\n * @returns {Promise<Blob>}\n */\nexport async function generatePseudoCustomAdler (text = ''): Promise<Blob> {\n    let textSVG = '';\n    if (text !== '') {\n        textSVG = await generateText(text, ADLER_WIDTH, ADLER_HEIGHT);\n    }\n\n    const svgString = `\n    <svg width=\"${ADLER_WIDTH}\" height=\"${ADLER_HEIGHT}\" viewBox=\"0 0 ${ADLER_WIDTH} ${ADLER_HEIGHT}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        ${ADLER}\n        ${textSVG}\n    </svg>\n    `;\n\n    return new Blob([svgString], { type: 'image/svg+xml' });\n}\n\nasync function generateText (text: string, width: number, height: number): Promise<string> {\n    text = text.toUpperCase().trim();\n\n    const svgOptions = {\n        fontSize: 220,\n        anchor: 'center middle' as TextToSVG.Anchor,\n        attributes: { fill: 'white', transform: '' }\n    };\n    const { metrics } = await textToSVG(text, svgOptions);\n\n    const boxWidth = Math.max(metrics.width + 192, MIN_BOX_WIDTH);\n\n    const rotate = `rotate(-15 ${width / 2} ${height / 2})`;\n    svgOptions.attributes.transform = rotate;\n\n    const boxX = (width - boxWidth) / 2;\n    const boxY = (height - BOX_HEIGHT) / 2;\n\n    const boxShadow = `<rect x=\"${boxX + SHADOW_OFFSET}\" y=\"${boxY + SHADOW_OFFSET}\" width=\"${boxWidth}\" height=\"${BOX_HEIGHT}\" fill=\"rgba(0, 0, 0, 0.5)\" transform=\"${rotate}\" />`;\n    const box = `<rect x=\"${boxX}\" y=\"${boxY}\" width=\"${boxWidth}\" height=\"${BOX_HEIGHT}\"  fill=\"#D18D1F\" transform=\"${rotate}\" />`;\n\n    const { path } = await textToSVG(text, { ...svgOptions, x: boxX + boxWidth / 2, y: boxY + BOX_HEIGHT / 2 * 0.92 });\n    const svgString = `\n    ${boxShadow}\n    ${box}\n    ${path}\n    `;\n\n    return svgString;\n}\n","\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop, Watch } from 'vue-property-decorator';\nimport { generatePseudoCustomAdler } from '@/utils/pseudoCustomAdler';\n\n@Options({})\nexport default class CustomAdler extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private previewURL: string|null = null;\n\n    public created (): void {\n        this.redrawPreview();\n    }\n\n    public beforeUnmount (): void {\n        if (this.previewURL) URL.revokeObjectURL(this.previewURL);\n    }\n\n    private onAdlerFileChanged (e: Event) {\n        const input = e.target as HTMLInputElement;\n        if (!input.files) return;\n\n        const files = Array.from(input.files);\n        if (files.length === 0) return;\n\n        this.values.uploadedAdler = files[0];\n    }\n\n    @Watch('values.fullName')\n    @Watch('values.uploadedAdler')\n    private async redrawPreview () {\n        const logo = this.values.uploadedAdler ?? await generatePseudoCustomAdler(this.values.fullName);\n\n        if (this.previewURL !== null) URL.revokeObjectURL(this.previewURL);\n        this.previewURL = URL.createObjectURL(logo);\n    }\n}\n","import { render } from \"./CustomAdler.vue?vue&type=template&id=086bcdf5&scoped=true\"\nimport script from \"./CustomAdler.vue?vue&type=script&lang=ts\"\nexport * from \"./CustomAdler.vue?vue&type=script&lang=ts\"\n\nimport \"./CustomAdler.vue?vue&type=style&index=0&id=086bcdf5&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-086bcdf5\"\n\nexport default script","<template>\n    <div class=\"main-menu-logo\">\n        <div class=\"form-field\" style=\"grid-area: text;\">\n            <label>Text</label>\n            <textarea placeholder=\"CIVILIANS\" rows=\"2\" v-model=\"values.mainMenuLogo.text\" style=\"resize: none;\"></textarea>\n            <small>Wenn möglich Modname in langer Form statt nur Abkürzung<br/>Bis zu zwei Zeilen</small>\n        </div>\n        <div class=\"form-field\" style=\"grid-area: font;\">\n            <label>Schriftgröße</label>\n            <input type=\"number\" step=\"0.5\" v-model=\"values.mainMenuLogo.fontSize\" max=\"27\" />\n            <small>Nur verändern, wenn Platz nicht ausreicht!</small>\n        </div>\n        <img :src=\"previewURL\" style=\"grid-area: logo; align-self: center;\">\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { generateLogo } from '@/utils/logo';\nimport { Watch, Prop } from 'vue-property-decorator';\nimport { Values } from '@/Values';\n\n@Options({})\nexport default class ManinMenu extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private previewURL: string|null = null;\n\n    public created (): void {\n        this.redrawPreview();\n    }\n\n    public beforeUnmount (): void {\n        if (this.previewURL) URL.revokeObjectURL(this.previewURL);\n    }\n\n    @Watch('values.mainMenuLogo', { deep: true })\n    private async redrawPreview () {\n        const { text, fontSize } = this.values.mainMenuLogo;\n\n        const logo = await generateLogo(text, { fontSize });\n\n        if (this.previewURL !== null) URL.revokeObjectURL(this.previewURL);\n        this.previewURL = URL.createObjectURL(logo);\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.main-menu-logo {\n    display: grid;\n    grid-column-gap: .25rem;\n    align-content: flex-start;\n    grid-template:\n        \"text logo\" auto\n        \"font logo\" auto / 1fr auto;\n}\n</style>\n","import TextToSVG from 'text-to-svg';\nimport { textToSVG } from './textToSVG';\n\nconst EYE_PATH = '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M93.5 19C97.9183 19 101.5 15.4183 101.5 11C101.5 6.58172 97.9183 3 93.5 3C89.0817 3 85.5 6.58172 85.5 11C85.5 15.4183 89.0817 19 93.5 19ZM93.5 16C96.2614 16 98.5 13.7614 98.5 11C98.5 8.23858 96.2614 6 93.5 6C90.7386 6 88.5 8.23858 88.5 11C88.5 13.7614 90.7386 16 93.5 16Z\" fill=\"white\"/>';\nconst BACKGROUND_PATH = '<path d=\"M2 10C2 5.58172 5.58172 2 10 2H118C122.418 2 126 5.58172 126 10V118C126 122.418 122.418 126 118 126H10C5.58172 126 2 122.418 2 118V10Z\" fill=\"#010103\"/>';\nconst BEAK_PATH = `\n<!-- Beak Shadow -->\n<path d=\"M61.0126 30.7283C61.0126 30.7283 73.9426 22.5037 82.0064 48.8044C87.4825 47.7823 97.4484 49.2599 100.053 53.2894C96.3911 53.5072 88.191 56.0581 85.7308 56.7783C83.9836 57.3428 81.9813 57.9332 79.8107 58.6438C68.4031 62.5206 61.3983 69.4629 57.1005 76.7911C53.041 82.9072 51.4253 89.9518 50.2164 91.0959L36.6803 61.4334C34.1158 55.739 33.1051 45.2976 38.7736 42.478L60.9923 30.782L60.9685 30.7283L61.0126 30.7283Z\" fill=\"black\" fill-opacity=\"0.4\"/>\n\n<!--Beak -->\n<path d=\"M100.061 37.7463C100.282 37.6464 100.451 37.5262 100.606 37.2784C100.799 36.9071 100.891 36.5086 100.874 36.1037C95.416 36.6423 89.0041 39.0747 86.4336 39.8803L86.3424 39.9073C84.6364 40.4119 82.6672 40.9944 80.5874 41.7125C74.2076 43.8871 69.2832 47.0795 65.4841 50.7644L100.061 37.7463Z\" fill=\"#854605\"/>\n<path d=\"M61.0126 11.4783C61.0126 11.4783 73.9426 3.25374 82.0064 29.5544C87.4825 28.5323 97.4484 30.0099 100.053 34.0394C96.3911 34.2572 88.191 36.8081 85.7308 37.5283C83.9836 38.0928 81.9813 38.6832 79.8107 39.3938C68.4031 43.2706 61.3983 50.2129 57.1005 57.5411C53.041 63.6572 51.4253 70.7018 50.2164 71.8459L36.6803 42.1834C34.1158 36.489 33.1051 26.0476 38.7736 23.228L60.9923 11.532L60.9685 11.4783L61.0126 11.4783Z\" fill=\"#D18D1E\"/>\n<path d=\"M70.7642 27.5018C68.6659 28.6691 62.5433 21.1969 60.7657 18.9286C60.5586 18.6661 60.7545 18.3111 61.1169 18.3258C63.1972 18.5008 68.6058 18.956 70.4404 20.2646C72.7301 21.991 73.2324 26.1679 70.7642 27.5018Z\" fill=\"#854205\"/>\n<path d=\"M69.718 25.5715C68.0301 26.4651 62.4625 19.6326 62.5844 19.3108C62.7267 18.9354 67.9467 19.5645 69.4799 20.6975C71.0871 21.7972 71.4263 24.6244 69.718 25.5715Z\" fill=\"#010103\"/>\n`;\n\nexport const DEFAULT_LOGO_TEXT_SIZE = 27;\n\nconst LOGO_SIZE = 128; // DON'T CHANGE ME WITHOUT UPDATING THE PATHS ABOVE\nconst TOP_LINE_Y = 95;\nconst BOTTOM_LINE_Y = 125;\n\ninterface Options {\n    active?: boolean;\n    fontSize?: number;\n}\n\n/**\n * Generate logo\n * @param {string} text Logo text\n * @param {Object} [options] Options\n * @param {boolean} [options.active] Whether t generate active state (hover state)\n * @param {number} [options.fontSize] Font size of logo (default 27)\n * @returns {Promise<Blob>}\n */\nexport async function generateLogo (text: string, options = {} as Options): Promise<Blob> {\n    const lines = text.split('\\n').map(x => x.trim().toUpperCase());\n\n    const svgOptions = {\n        fontSize: options.fontSize ?? DEFAULT_LOGO_TEXT_SIZE,\n        anchor: 'center bottom' as TextToSVG.Anchor,\n        attributes: { fill: 'white' }\n    };\n\n    const textPaths: string[] = [];\n    if (lines.length === 2) {\n        const [line1, line2] = lines;\n        const { path: path1 } = await textToSVG(line1, { x: LOGO_SIZE / 2, y: TOP_LINE_Y, ...svgOptions });\n        const { path: path2 } = await textToSVG(line2, { x: LOGO_SIZE / 2, y: BOTTOM_LINE_Y, ...svgOptions });\n        textPaths.push(path1, path2);\n    } else {\n        const line = lines[0];\n\n        const { path } = await textToSVG(line, { x: LOGO_SIZE / 2, y: (TOP_LINE_Y + BOTTOM_LINE_Y) / 2, ...svgOptions });\n        textPaths.push(path);\n    }\n\n    const svgString = `\n    <svg width=\"${LOGO_SIZE}\" height=\"${LOGO_SIZE}\" viewBox=\"0 0 ${LOGO_SIZE} ${LOGO_SIZE}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        ${BACKGROUND_PATH}\n        ${textPaths.join('\\n')}\n        ${BEAK_PATH}\n        ${options.active ? EYE_PATH : ''}\n    </svg>\n    `;\n\n    return new Blob([svgString], { type: 'image/svg+xml' });\n}\n","\nimport { Options, Vue } from 'vue-class-component';\nimport { generateLogo } from '@/utils/logo';\nimport { Watch, Prop } from 'vue-property-decorator';\nimport { Values } from '@/Values';\n\n@Options({})\nexport default class ManinMenu extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private previewURL: string|null = null;\n\n    public created (): void {\n        this.redrawPreview();\n    }\n\n    public beforeUnmount (): void {\n        if (this.previewURL) URL.revokeObjectURL(this.previewURL);\n    }\n\n    @Watch('values.mainMenuLogo', { deep: true })\n    private async redrawPreview () {\n        const { text, fontSize } = this.values.mainMenuLogo;\n\n        const logo = await generateLogo(text, { fontSize });\n\n        if (this.previewURL !== null) URL.revokeObjectURL(this.previewURL);\n        this.previewURL = URL.createObjectURL(logo);\n    }\n}\n","import { render } from \"./MainMenu.vue?vue&type=template&id=3eaf811c&scoped=true\"\nimport script from \"./MainMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./MainMenu.vue?vue&type=script&lang=ts\"\n\nimport \"./MainMenu.vue?vue&type=style&index=0&id=3eaf811c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-3eaf811c\"\n\nexport default script","<template>\n    <div>\n        <h1>Gruppe Adler {{ values.fullName }}</h1>\n        <h2>Autoren</h2>\n        <ul>\n            <li v-for=\"(a, i) in values.authors\" :key=\"i\">{{a}}</li>\n        </ul>\n        <h2>Beschreibung</h2>\n        <p>{{ values.description }}</p>\n        <h2>Hauptmenü Logo</h2>\n        <img :src=\"urls.logo\" />\n        <img :src=\"urls.logoActive\" />\n        <h2>Kleines Logo</h2>\n        <img :src=\"urls.logoSmall\" />\n        <h2>Overview Bild</h2>\n        <img :src=\"urls.overview\" />\n        <h2>Steam WS Logo</h2>\n        <img :src=\"urls.steam\" />\n        <h2>GitHub Social Preview</h2>\n        <img :src=\"urls.github\" />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop } from 'vue-property-decorator';\nimport { generateLogo } from '@/utils/logo';\nimport { generateOverview } from '@/utils/overview';\nimport { generatePseudoCustomAdler } from '@/utils/pseudoCustomAdler';\nimport { generateGitHubSocialPreview } from '@/utils/gitHubSocialPreview';\nimport { generateSteamLogo } from '@/utils/steam';\n\n@Options({})\nexport default class Verify extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private urls: { [key: string]: string } = {};\n\n    public created (): void {\n        this.setup();\n    }\n\n    public beforeUnmount (): void {\n        for (const key in this.urls) {\n            if (Object.prototype.hasOwnProperty.call(this.urls, key)) URL.revokeObjectURL(this.urls[key]);\n        }\n    }\n\n    private async setup () {\n        const { text, fontSize } = this.values.mainMenuLogo;\n\n        const resolve = (key: string) => (blob: Blob) => {\n            this.urls[key] = URL.createObjectURL(blob);\n        };\n\n        const customAdler = this.values.uploadedAdler ?? await generatePseudoCustomAdler(this.values.fullName);\n\n        generateLogo(text, { fontSize }).then(resolve('logo'));\n        generateLogo(text, { fontSize, active: true }).then(resolve('logoActive'));\n        fetch('/logo_small_ca.svg').then(res => res.blob()).then(resolve('logoSmall'));\n        generateOverview(customAdler).then(resolve('overview'));\n        generateSteamLogo(customAdler).then(resolve('steam'));\n        generateGitHubSocialPreview(customAdler).then(resolve('github'));\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\nh2 {\n    margin-top: 1rem;\n    margin-bottom: .25rem;\n}\n\nimg {\n    max-width: 100%;\n}\n</style>\n","\n/**\n * Download a file\n * @param {string} name Name of file\n * @param {Blob} blob Blob to download\n */\nexport function download (name: string, blob: Blob): void {\n    const url = URL.createObjectURL(blob);\n\n    const link = document.createElement('a');\n    link.download = name;\n    link.href = url;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    link.remove();\n\n    // we revoke the url only after a delay because old Edge can't handle it otherwise\n    window.setTimeout(() => URL.revokeObjectURL(url), 200);\n}\n\n/**\n * Convert Blob to Image\n * @param {Blob} blob\n * @returns {Promise<HTMLImageElement>} Image\n */\nexport async function blobToImage (blob: Blob): Promise<HTMLImageElement> {\n    const url = URL.createObjectURL(blob);\n    try {\n        const img = new Image();\n        img.src = url;\n\n        await waitOnImageLoad(img);\n        return img;\n    } finally {\n        URL.revokeObjectURL(url);\n    }\n}\n\n/**\n * Wait until given image is loaded so it can be used with drawImage etc.\n */\nasync function waitOnImageLoad (img: HTMLImageElement): Promise<void> {\n    img.decoding = 'async';\n    const loaded = new Promise<void>((resolve, reject) => {\n        img.onload = () => resolve();\n        img.onerror = () => reject(Error('Image loading error'));\n    });\n\n    if (img.decode) {\n        // Nice off-thread way supported in Safari/Chrome.\n        // Safari throws on decode if the source is SVG.\n        // https://bugs.webkit.org/show_bug.cgi?id=188347\n        await img.decode().catch(() => null);\n    }\n\n    // Always await loaded, as we may have bailed due to the Safari bug above.\n    await loaded;\n}\n","import { blobToImage } from '.';\n\nconst BACKGROUND_COLOR = '#323232';\n\nconst ADLER_HEIGHT = 960;\nconst OVERVIEW_WIDTH = 2048;\nconst OVERVIEW_HEIGHT = 1024;\n\n/**\n *\n * Generate overview image\n * @param {Blob} adler Adler\n * @returns {Promise<Blob>}\n */\nexport async function generateOverview (adler: Blob): Promise<Blob> {\n    const canvas = document.createElement('canvas');\n    canvas.height = OVERVIEW_HEIGHT;\n    canvas.width = OVERVIEW_WIDTH;\n\n    const ctx = canvas.getContext('2d');\n    if (ctx === null) throw new Error('Couldn\\'t get context');\n\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = BACKGROUND_COLOR;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    const drawable = await blobToImage(adler);\n\n    const factor = ADLER_HEIGHT / drawable.height;\n    const width = drawable.width * factor;\n    ctx.drawImage(drawable, (canvas.width - width) / 2, (canvas.height - ADLER_HEIGHT) / 2, width, ADLER_HEIGHT);\n\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob === null) {\n                reject(new Error('Couldn\\'t generate Blob'));\n                return;\n            }\n            resolve(blob);\n        }, 'image/png', 1);\n    }).finally(() => {\n        canvas.remove();\n    });\n}\n","import { blobToImage } from '.';\n\nconst BACKGROUND_COLOR = '#323232';\n\nconst IMAGE_WIDTH = 1280;\nconst IMAGE_HEIGHT = 640;\nconst ADLER_HEIGHT = IMAGE_HEIGHT - 160; // GitHub recommends a margin of 80px on each size\n\n/**\n *\n * Generate overview image\n * @param {Blob} adler Adler\n * @returns {Promise<Blob>}\n */\nexport async function generateGitHubSocialPreview (adler: Blob): Promise<Blob> {\n    const canvas = document.createElement('canvas');\n    canvas.width = IMAGE_WIDTH;\n    canvas.height = IMAGE_HEIGHT;\n\n    const ctx = canvas.getContext('2d');\n    if (ctx === null) throw new Error('Couldn\\'t get context');\n\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = BACKGROUND_COLOR;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    const drawable = await blobToImage(adler);\n\n    const factor = ADLER_HEIGHT / drawable.height;\n    const height = drawable.height * factor;\n    const width = drawable.width * factor;\n    ctx.drawImage(drawable, (canvas.width - width) / 2, (canvas.height - height) / 2, width, height);\n\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob === null) {\n                reject(new Error('Couldn\\'t generate Blob'));\n                return;\n            }\n            resolve(blob);\n        }, 'image/png', 1);\n    }).finally(() => {\n        canvas.remove();\n    });\n}\n","import { blobToImage } from '.';\n\nconst BACKGROUND_COLOR = '#323232';\n\nconst IMAGE_SIZE = 512;\nconst ADLER_SIZE = IMAGE_SIZE - 8 * 2;\n\n/**\n *\n * Generate overview image\n * @param {Blob} adler Adler\n * @returns {Promise<Blob>}\n */\nexport async function generateSteamLogo (adler: Blob): Promise<Blob> {\n    const canvas = document.createElement('canvas');\n    canvas.height = IMAGE_SIZE;\n    canvas.width = IMAGE_SIZE;\n\n    const ctx = canvas.getContext('2d');\n    if (ctx === null) throw new Error('Couldn\\'t get context');\n\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = BACKGROUND_COLOR;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    const drawable = await blobToImage(adler);\n\n    const drawableSize = Math.max(drawable.height, drawable.width);\n\n    const factor = ADLER_SIZE / drawableSize;\n    const height = drawable.height * factor;\n    const width = drawable.width * factor;\n    ctx.drawImage(drawable, (canvas.width - width) / 2, (canvas.height - height) / 2, width, height);\n\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob === null) {\n                reject(new Error('Couldn\\'t generate Blob'));\n                return;\n            }\n            resolve(blob);\n        }, 'image/png', 1);\n    }).finally(() => {\n        canvas.remove();\n    });\n}\n","\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop } from 'vue-property-decorator';\nimport { generateLogo } from '@/utils/logo';\nimport { generateOverview } from '@/utils/overview';\nimport { generatePseudoCustomAdler } from '@/utils/pseudoCustomAdler';\nimport { generateGitHubSocialPreview } from '@/utils/gitHubSocialPreview';\nimport { generateSteamLogo } from '@/utils/steam';\n\n@Options({})\nexport default class Verify extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private urls: { [key: string]: string } = {};\n\n    public created (): void {\n        this.setup();\n    }\n\n    public beforeUnmount (): void {\n        for (const key in this.urls) {\n            if (Object.prototype.hasOwnProperty.call(this.urls, key)) URL.revokeObjectURL(this.urls[key]);\n        }\n    }\n\n    private async setup () {\n        const { text, fontSize } = this.values.mainMenuLogo;\n\n        const resolve = (key: string) => (blob: Blob) => {\n            this.urls[key] = URL.createObjectURL(blob);\n        };\n\n        const customAdler = this.values.uploadedAdler ?? await generatePseudoCustomAdler(this.values.fullName);\n\n        generateLogo(text, { fontSize }).then(resolve('logo'));\n        generateLogo(text, { fontSize, active: true }).then(resolve('logoActive'));\n        fetch('/logo_small_ca.svg').then(res => res.blob()).then(resolve('logoSmall'));\n        generateOverview(customAdler).then(resolve('overview'));\n        generateSteamLogo(customAdler).then(resolve('steam'));\n        generateGitHubSocialPreview(customAdler).then(resolve('github'));\n    }\n}\n","import { render } from \"./Verify.vue?vue&type=template&id=9a450e98&scoped=true\"\nimport script from \"./Verify.vue?vue&type=script&lang=ts\"\nexport * from \"./Verify.vue?vue&type=script&lang=ts\"\n\nimport \"./Verify.vue?vue&type=style&index=0&id=9a450e98&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-9a450e98\"\n\nexport default script","<template>\n    <div v-if=\"state === 'pending'\">\n        Loading...\n    </div>\n    <div v-else-if=\"state === 'fulfilled'\">\n        <button\n            @click=\"download\"\n            style=\"font-size: 1.5rem; margin: 2rem; margin-right: auto; margin-left: auto;\"\n        >\n            <span class=\"material-icons\">download</span>\n            <span>Downlad</span>\n        </button>\n        <h2>Nächste Schritte</h2>\n        <ol>\n            <li>ZIP enpacken</li>\n            <!-- TODO: Proper Steps -->\n            <li v-if=\"!values.uploadedAdler\"><code>pseudo_custom_adler.svg</code> ist nur eine hochauflösende Kopie des Adlers für dich</li>\n            <li><code>github_social_preview.png</code> kannst du <a :href=\"`https://github.com/gruppe-adler/${values.gitHubRepo}/settings`\" target=\"_blank\">hier</a> als \"Social preview\" einstellen</li>\n            <li><code>steam_logo.png</code> dient als Logo für den Workshop (kann mit dem Arma 3 Publisher verändert werden)</li>\n            <li>Alle Dateien im Verzeichnis <code>mod/</code> gehören in das Hauptverzeichnis deines Mods</li>\n            <li>\n                <span>Falls du deinen Mod mit HEMTT baust sollten alle generierten Dateien in dem \"files\"-Feld in der \"hemtt.toml\" stehen:</span>\n                <pre v-html=\"hemttFilesExample\"></pre>\n            </li>\n        </ol>\n    </div>\n    <div v-else>\n        An error occured :/\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport JSZip from 'jszip';\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop } from 'vue-property-decorator';\nimport { generateLogo } from '@/utils/logo';\nimport { generatePseudoCustomAdler } from '@/utils/pseudoCustomAdler';\nimport { generateModCPP } from '@/utils/modCPP';\nimport { NAMES } from '@/utils/const';\nimport { generateOverview } from '@/utils/overview';\nimport { generateSteamLogo } from '@/utils/steam';\nimport { generateGitHubSocialPreview } from '@/utils/gitHubSocialPreview';\nimport { blobToImage, download } from '@/utils';\nimport initAFF from '@/utils/aff';\n\nconst affPromise = initAFF();\n\n@Options({})\nexport default class Done extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private promise!: Promise<Blob[]>;\n    private state = 'pending';\n\n    private async download () {\n        const [logoSmall, logo, logoActive, overview, steamLogo, githubSocialPreview, modCPP, customAdler] = await this.promise;\n\n        const zip = new JSZip();\n        zip.file(`mod/${NAMES.logoSmall}.paa`, logoSmall);\n        zip.file(`mod/${NAMES.overview}.paa`, overview);\n        zip.file(`mod/${NAMES.logo}.paa`, logo);\n        zip.file(`mod/${NAMES.logoActive}.paa`, logoActive);\n        zip.file('mod/mod.cpp', modCPP);\n\n        zip.file('steam_logo.png', steamLogo);\n        zip.file('github_social_preview.png', githubSocialPreview);\n\n        if (!this.values.uploadedAdler) zip.file('pseudo_custom_adler.svg', customAdler);\n\n        const blob = await zip.generateAsync({ type: 'blob' });\n        download('gruppe_adler_mod_marketing.zip', blob);\n    }\n\n    public created (): void {\n        const customAdlerPromise = this.values.uploadedAdler ? Promise.resolve(this.values.uploadedAdler) : generatePseudoCustomAdler(this.values.fullName);\n\n        this.promise = Promise.all([\n            fetch('/logo_small_ca.svg').then(res => res.blob()).then(this.convertToPAA),\n            generateLogo(this.values.mainMenuLogo.text, { fontSize: this.values.mainMenuLogo.fontSize }).then(this.convertToPAA),\n            generateLogo(this.values.mainMenuLogo.text, { fontSize: this.values.mainMenuLogo.fontSize, active: true }).then(this.convertToPAA),\n            customAdlerPromise.then(customAdler => generateOverview(customAdler)).then(this.convertToPAA),\n            customAdlerPromise.then(customAdler => generateSteamLogo(customAdler)),\n            customAdlerPromise.then(customAdler => generateGitHubSocialPreview(customAdler)),\n            generateModCPP(this.values.fullName, this.values.authors, this.values.gitHubRepo, this.values.description),\n            customAdlerPromise\n        ]);\n\n        this.promise.then(() => { this.state = 'fulfilled'; });\n        this.promise.catch(() => { this.state = 'rejected'; });\n    }\n\n    private get hemttFilesExample (): string {\n        const files = [\n            'mod.cpp',\n            `${NAMES.logoActive}.paa`,\n            `${NAMES.logo}.paa`,\n            `${NAMES.overview}.paa`,\n            `${NAMES.logoSmall}.paa`\n        ];\n\n        return `files = [\\n${files.map(f => `    <span style=\"color: #a5d6ff;\">\"${f}\"</span>`).join(',\\n')}\\n]`;\n    }\n\n    private async blobToImageData (blob: Blob): Promise<ImageData> {\n        const img = await blobToImage(blob);\n\n        const canvas = document.createElement('canvas');\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        const ctx = canvas.getContext('2d');\n        if (ctx === null) throw new Error('Counldn\\'t get context');\n\n        ctx.drawImage(img, 0, 0);\n        const data = ctx.getImageData(0, 0, img.width, img.height);\n\n        canvas.remove();\n\n        return data;\n    }\n\n    private async convertToPAA (blob: Blob): Promise<Blob> {\n        const data = await this.blobToImageData(blob);\n        const arr = (await affPromise).encode(data);\n        return new Blob([arr], { type: 'image/vnd.paa' });\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nli {\n    margin: .5rem 0;\n    line-height: 1.5em;\n}\n\npre {\n    border-radius: .5rem;\n    background-color: #0d1117;\n    color: white;\n    padding: 1rem;\n    margin-top: .25rem;\n}\n</style>\n","export const NAMES = {\n    logoSmall: 'logo_small_ca',\n    overview: 'overview_co',\n    logo: 'logo_ca',\n    logoActive: 'logo_active_ca'\n};\n","import { NAMES } from './const';\n\nconst OVERVIEW_PREFIX = \"<br/><t align='center' size='0.75'>Visit Gruppe Adler on <t href='https://gruppe-adler.de/'>our Website</t> | <t href='http://discord.gruppe-adler.de'>Discord</t> | <t href='https://www.youtube.com/user/gruppeadler'>YouTube</t> | <t href='https://twitter.com/Gruppe_Adler'>Twitter</t></t><br/><br/>\";\n\n/**\n * @param {string} fullName Modname in langer Form (keine Abkürzung also \"Civilians\" und nicht \"Civs\"; Spaces bei mehreren Wörtern)\n * @param {string[]} authors Authors\n * @param {string} gitHubRepo GitHub Repository\n * @param {string} description Description\n */\nexport function generateModCPP (fullName: string, authors: string[], gitHubRepo: string, description: string): Blob {\n    const attributes = new Map<string, string|number|unknown[]>();\n    const prefixedName = `Gruppe Adler ${fullName}`;\n\n    attributes.set('name', prefixedName);\n    attributes.set('author', authors.join(', '));\n    attributes.set('logo', `${NAMES.logo}.paa`);\n    attributes.set('logoOver', `${NAMES.logoActive}.paa`);\n    attributes.set('tooltip', prefixedName);\n    attributes.set('tooltipOwned', prefixedName);\n    attributes.set('picture', `${NAMES.overview}.paa`);\n    attributes.set('actionName', 'GitHub');\n    attributes.set('action', `https://github.com/gruppe-adler/${gitHubRepo}`);\n    attributes.set('overview', `${OVERVIEW_PREFIX}${description}`);\n    attributes.set('hideName', 0);\n    attributes.set('hidePicture', 0);\n    attributes.set('dlcColor[]', [0.8196, 0.5529, 0.1216, 1]);\n    attributes.set('logoSmall', `${NAMES.logoSmall}.paa`);\n\n    const content = Array.from(attributes.entries()).map(([name, value]) => `${name} = ${encodeAttributeValue(value)};`).join('\\n');\n\n    return new Blob([content], { type: 'text/x-c' });\n}\n\n/**\n * @param {unknown} value Value to encode\n * @returns {string} Encoded value\n */\nfunction encodeAttributeValue (value: unknown): string {\n    switch (typeof value) {\n    case 'string':\n        return `\"${value}\"`;\n    case 'number':\n        return `${value}`;\n    case 'boolean':\n        return value ? '1' : '0';\n    case 'object':\n        if (Array.isArray(value)) {\n            return `{${value.map(encodeAttributeValue).join(', ')}}`;\n        }\n        break;\n    }\n\n    throw new Error(`Couldn't encode value (${value}) of type ${typeof value}`);\n}\n","/* eslint-disable camelcase, @typescript-eslint/no-unused-vars */\nconst NULL_POINTER = 0;\n\ninterface AFFExports extends WebAssembly.Exports {\n    encode: (width: number, height: number, data: number, size: number) => number;\n    free_encoded_data: (ptr: number) => 0|1;\n    decode: (data: number, dataSize: number, width: number, height: number, size: number) => number;\n    get_last_aff_exception: () => number;\n    free: (ptr: number) => number;\n    malloc: (size: number) => number;\n    __errno_location: () => number;\n}\n\ninterface AFFOptions {\n    exit?: (exitCode: number) => unknown;\n}\n\nexport class AFFNotReadyError extends Error {\n    public readonly name = 'AFFNotReadyError';\n\n    constructor () {\n        super('AFF not ready yet. Remember awaiting the \"aff.ready\" promise, before accessing any methods or properties.');\n    }\n}\n\nconst AFF_EXCEPTION_MSGS = new Map<number, string>([\n    [0, 'OK'],\n    [-1, 'Unknown Error'],\n    [-2, 'Read Error'],\n    [-3, 'Argument Error'],\n    [-4, 'Invalid State'],\n    [-5, 'IO Error'],\n    [-6, 'Compression Error'],\n    [-7, 'Invalid State']\n]);\n\nexport class AFFExceptionError extends Error {\n    constructor (code: number) {\n        const message = AFF_EXCEPTION_MSGS.get(code) ?? 'Unknown Error Code';\n\n        super(`${message} (Code: ${code})`);\n\n        this.name = 'AFFExceptionError';\n    }\n}\n\n// Safari still can't handle WebAssembly.instantiateStreaming...\nasync function instantiateWA (response: Response | PromiseLike<Response>, importObject?: WebAssembly.Imports): Promise<WebAssembly.Instance> {\n    if (WebAssembly.instantiateStreaming !== undefined) {\n        const { instance } = await WebAssembly.instantiateStreaming(response, importObject);\n        return instance;\n    }\n\n    const bytes = await (await response).arrayBuffer();\n    const source = await WebAssembly.instantiate(bytes, importObject);\n    return source.instance;\n}\nexport class AFF {\n    private dataView: DataView;\n    private instance: WebAssembly.Instance|null = null;\n    private memory: WebAssembly.Memory;\n    public readonly ready: Promise<void>;\n\n    /**\n     * @param {Response|PromiseLike<Response>} input (Promise that resolves to) Response, which includes WASM Module\n     * @param {AFFOptions} options Options\n     */\n    constructor (input: Response|PromiseLike<Response>, options?: AFFOptions) {\n        this.memory = new WebAssembly.Memory({ initial: 256, maximum: 32768 });\n        this.dataView = new DataView(this.memory.buffer);\n\n        this.ready = instantiateWA(\n            input,\n            {\n                env: {\n                    memory: this.memory,\n                    /**\n                     * Get information about a file or directory, given a path\n                     * @param {number} pathPtr The path of the file or directory that you want information about. (char *)\n                     * @param {number} bufferPtr A pointer to a buffer where the function can store the information (struct stat64 *)\n                     * @returns {0|-1} 0 = Success / -1 = An error occurred (errno is set).\n                     */\n                    __sys_stat64: (pathPtr: number, bufferPtr: number): 0|-1 => {\n                        this.setErrNo(5); // EIO: Input/output error\n                        return -1;\n                    },\n\n                    /**\n                     * Called when memory has grown. In a JS runtime, this is used to know when to update the JS views\n                     * on the wasm memory, which otherwise we would need to constantly check for after any wasm code\n                     * runs. See [this wasi discussion](https://github.com/WebAssembly/WASI/issues/82).\n                     * @param {number} index Which memory has grown\n                     */\n                    emscripten_notify_memory_growth: (index: number) => this.updateViews()\n                },\n                wasi_snapshot_preview1: {\n                    /**\n                     * Read from a file descriptor\n                     * @param {number} fd File descriptor\n                     * @param {number} iov\n                     * @param {number} iovcnt\n                     * @param {number} pnum\n                     * @returns {0|-1} 0 = Success / -1 = An error occurred (errno is set).\n                     */\n                    fd_read: (fd: number, iov: number, iovCount: number, pnum: number): 0|-1 => {\n                        this.setErrNo(5); // EIO: Input/output error\n                        return -1;\n                    },\n\n                    /**\n                     * Lose a file descriptor\n                     * @param {number} fd File descriptor\n                     * @returns {0|-1} 0 = Success / -1 = An error occurred (errno is set).\n                     */\n                    fd_close: (fd: number): 0|-1 => {\n                        this.setErrNo(5); // EIO: Input/output error\n                        return -1;\n                    },\n\n                    /**\n                     * Reposition read/write file offset\n                     * @param {number} fd File descriptor\n                     * @param {number} offsetLow\n                     * @param {number} offsetHigh\n                     * @param {number} whence\n                     * @param {number} newOffset\n                     * @returns {0|-1} 0 = Success / -1 = An error occurred (errno is set).\n                     */\n                    fd_seek: (fd: number, offsetLow: number, offsetHigh: number, whence: number, newOffset: number): 0|-1 => {\n                        this.setErrNo(5); // EIO: Input/output error\n                        return -1;\n                    },\n\n                    /**\n                     * Write to a file descriptor\n                     * @param {number} fd File descriptor\n                     * @param {number} iov\n                     * @param {number} iovCount\n                     * @param {number} pnum\n                     * @returns {0|-1} 0 = Success / -1 = An error occurred (errno is set).\n                     */\n                    fd_write: (fd: number, iov: number, iovCount: number, pnum: number): 0|-1 => {\n                        this.setErrNo(5); // EIO: Input/output error\n                        return -1;\n                    },\n\n                    /**\n                     * Return command-line argument data sizes.\n                     * @param {number} penvironCount (Output pointer) The number of arguments.\n                     * @param {number} penvironBufferSize (Output pointer) The size of the argument string data.\n                     * @returns {0}\n                     */\n                    environ_sizes_get: (penvironCountPtr: number, penvironBufferSizePtr: number): 0|-1 => {\n                        this.dataView.setInt32(penvironCountPtr, 0, true);\n                        this.dataView.setInt32(penvironBufferSizePtr, 0, true);\n                        return 0;\n                    },\n                    environ_get: (environ: number, environBufferPtr: number) => {\n                        return 0;\n                    },\n\n                    /**\n                     * Called on program exit\n                     * @param {number} exitCode Exit code\n                     */\n                    proc_exit: (exitCode: number): void => {\n                        const func = options?.exit;\n                        if (func) func(exitCode);\n                    }\n                }\n            }\n        ).then(instance => {\n            this.instance = instance;\n            this.updateViews();\n        });\n    }\n\n    private get exports (): AFFExports|null {\n        return this.instance?.exports as AFFExports;\n    }\n\n    /**\n     * Update this.dataView. This is called once initially, when the WASM loads\n     * and every time memory grows / shrinks and therefore the underlying memory\n     * buffer changes.\n     */\n    private updateViews () {\n        this.dataView = new DataView(this.memory.buffer);\n    }\n\n    /**\n     * Allocate memory block\n     * @param {number} size Size of the memory block, in bytes.\n     * @returns {number} This function returns a pointer to the allocated memory.\n     */\n    private malloc (size: number): number {\n        if (this.exports === null) throw new AFFNotReadyError();\n\n        const ptr = this.exports.malloc(size);\n        if (ptr === NULL_POINTER) throw new Error('Failed to allocate memory');\n\n        return ptr;\n    }\n\n    /**\n     * Deallocate memory previously allocated\n     * @param {number} ptr This is the pointer to a memory block previously allocated\n     */\n    private free (ptr: number): void {\n        if (this.exports === null) throw new AFFNotReadyError();\n\n        this.exports.free(ptr);\n    }\n\n    /**\n     * Write buffer to memory. This will automatically allocate memory.\n     * You should remember to free the memory after you're done using it.\n     * @param {ArrayBufferLike} buffer\n     * @returns {number} Pointer to the allocated memory.\n     */\n    private writeBufferToMemory (buffer: ArrayBufferLike): number {\n        const ptr = this.malloc(buffer.byteLength);\n\n        const arr = new Uint8Array(buffer);\n\n        for (let i = 0; i < arr.length; i++) {\n            this.dataView.setUint8(ptr + i, arr[i]);\n        }\n\n        return ptr;\n    }\n\n    /**\n     * Copy from memory\n     * @param {number} ptr Pointer to data\n     * @param {number} size Size\n     * @returns {Uint8Array}\n     */\n    private getBytesFromMemory (ptr: number, size: number): Uint8Array {\n        return new Uint8Array(this.memory.buffer).slice(ptr, ptr + size);\n    }\n\n    /**\n     * Set errno\n     * @param errno errno\n     */\n    private setErrNo (errno: number) {\n        if (this.exports === null) throw new AFFNotReadyError();\n\n        this.dataView.setInt32(this.exports.__errno_location(), errno);\n    }\n\n    /**\n     * Return error, which corresponds to last thrown grad_aff exception\n     * @returns Error according to last exception\n     */\n    private getLastAFFException (): AFFExceptionError {\n        if (this.exports === null) throw new AFFNotReadyError();\n\n        const num = this.exports.get_last_aff_exception();\n\n        return new AFFExceptionError(num);\n    }\n\n    /**\n     * Encode image data to PAA bytes\n     * @param {ImageData} imageData Image data\n     * @returns {Uint8Array} byte-encoded PAA\n     *\n     * @throws {@link AFFNotReadyError}\n     * Thrown if this function is called before AFF instance is ready. (await the .ready promise to prevent this)\n     *\n     * @throws {@link AFFExceptionError}\n     * Thrown if grad_aff implementation throws any exceptions.\n     */\n    public encode (imageData: ImageData): Uint8Array {\n        if (this.exports === null) throw new AFFNotReadyError();\n\n        const sizePtr = this.malloc(4);\n        const imageDataPtr = this.writeBufferToMemory(imageData.data.buffer);\n\n        const ptr = this.exports.encode(imageData.width, imageData.height, imageDataPtr, sizePtr);\n        if (ptr === NULL_POINTER) throw this.getLastAFFException();\n\n        const size = this.dataView.getUint32(sizePtr, true);\n        const output = this.getBytesFromMemory(ptr, size);\n\n        const success = this.exports.free_encoded_data(ptr);\n        if (success === 0) throw this.getLastAFFException();\n        this.free(sizePtr);\n        this.free(imageDataPtr);\n\n        return output;\n    }\n\n    /**\n     * Encode PAA bytes to image data\n     * @param {Uint8Array} data byte-encoded PAA\n     * @returns {ImageData} image data\n     *\n     * @throws {@link AFFNotReadyError}\n     * Thrown if this function is called before AFF instance is ready. (await the .ready promise to prevent this)\n     *\n     * @throws {@link AFFExceptionError}\n     * Thrown if grad_aff implementation throws any exceptions.\n     */\n    public decode (data: Uint8Array): ImageData {\n        if (this.exports === null) throw new AFFNotReadyError();\n\n        const outputSizePtr = this.malloc(4);\n        const widthPtr = this.malloc(2);\n        const heightPtr = this.malloc(2);\n        const dataPtr = this.writeBufferToMemory(data.buffer);\n\n        const ptr = this.exports.decode(dataPtr, data.length, widthPtr, heightPtr, outputSizePtr);\n        if (ptr === NULL_POINTER) throw this.getLastAFFException();\n\n        const size = this.dataView.getUint32(outputSizePtr, true);\n        const width = this.dataView.getUint16(widthPtr, true);\n        const height = this.dataView.getUint16(heightPtr, true);\n        const output = this.getBytesFromMemory(ptr, size);\n\n        const image = new ImageData(new Uint8ClampedArray(output.buffer), width, height);\n\n        this.free(outputSizePtr);\n        this.free(widthPtr);\n        this.free(heightPtr);\n        this.free(dataPtr);\n\n        return image;\n    }\n}\n\n/**\n * @param {Request|RequestInfo|URL|Response|Promise<Response>} input\n */\nexport default async function init (input: Request|RequestInfo|URL|Response|Promise<Response> = '/grad_aff_paa.wasm', options?: AFFOptions): Promise<AFF> {\n    if (typeof input === 'string' || input instanceof Request || input instanceof URL) {\n        if (input instanceof URL) input = input.toString();\n\n        input = fetch(input);\n    }\n\n    const initObj = new AFF(input, options);\n    await initObj.ready;\n\n    return initObj;\n}\n","\nimport JSZip from 'jszip';\nimport { Options, Vue } from 'vue-class-component';\nimport { Values } from '@/Values';\nimport { Prop } from 'vue-property-decorator';\nimport { generateLogo } from '@/utils/logo';\nimport { generatePseudoCustomAdler } from '@/utils/pseudoCustomAdler';\nimport { generateModCPP } from '@/utils/modCPP';\nimport { NAMES } from '@/utils/const';\nimport { generateOverview } from '@/utils/overview';\nimport { generateSteamLogo } from '@/utils/steam';\nimport { generateGitHubSocialPreview } from '@/utils/gitHubSocialPreview';\nimport { blobToImage, download } from '@/utils';\nimport initAFF from '@/utils/aff';\n\nconst affPromise = initAFF();\n\n@Options({})\nexport default class Done extends Vue {\n    @Prop({ required: true })\n    private values!: Values;\n\n    private promise!: Promise<Blob[]>;\n    private state = 'pending';\n\n    private async download () {\n        const [logoSmall, logo, logoActive, overview, steamLogo, githubSocialPreview, modCPP, customAdler] = await this.promise;\n\n        const zip = new JSZip();\n        zip.file(`mod/${NAMES.logoSmall}.paa`, logoSmall);\n        zip.file(`mod/${NAMES.overview}.paa`, overview);\n        zip.file(`mod/${NAMES.logo}.paa`, logo);\n        zip.file(`mod/${NAMES.logoActive}.paa`, logoActive);\n        zip.file('mod/mod.cpp', modCPP);\n\n        zip.file('steam_logo.png', steamLogo);\n        zip.file('github_social_preview.png', githubSocialPreview);\n\n        if (!this.values.uploadedAdler) zip.file('pseudo_custom_adler.svg', customAdler);\n\n        const blob = await zip.generateAsync({ type: 'blob' });\n        download('gruppe_adler_mod_marketing.zip', blob);\n    }\n\n    public created (): void {\n        const customAdlerPromise = this.values.uploadedAdler ? Promise.resolve(this.values.uploadedAdler) : generatePseudoCustomAdler(this.values.fullName);\n\n        this.promise = Promise.all([\n            fetch('/logo_small_ca.svg').then(res => res.blob()).then(this.convertToPAA),\n            generateLogo(this.values.mainMenuLogo.text, { fontSize: this.values.mainMenuLogo.fontSize }).then(this.convertToPAA),\n            generateLogo(this.values.mainMenuLogo.text, { fontSize: this.values.mainMenuLogo.fontSize, active: true }).then(this.convertToPAA),\n            customAdlerPromise.then(customAdler => generateOverview(customAdler)).then(this.convertToPAA),\n            customAdlerPromise.then(customAdler => generateSteamLogo(customAdler)),\n            customAdlerPromise.then(customAdler => generateGitHubSocialPreview(customAdler)),\n            generateModCPP(this.values.fullName, this.values.authors, this.values.gitHubRepo, this.values.description),\n            customAdlerPromise\n        ]);\n\n        this.promise.then(() => { this.state = 'fulfilled'; });\n        this.promise.catch(() => { this.state = 'rejected'; });\n    }\n\n    private get hemttFilesExample (): string {\n        const files = [\n            'mod.cpp',\n            `${NAMES.logoActive}.paa`,\n            `${NAMES.logo}.paa`,\n            `${NAMES.overview}.paa`,\n            `${NAMES.logoSmall}.paa`\n        ];\n\n        return `files = [\\n${files.map(f => `    <span style=\"color: #a5d6ff;\">\"${f}\"</span>`).join(',\\n')}\\n]`;\n    }\n\n    private async blobToImageData (blob: Blob): Promise<ImageData> {\n        const img = await blobToImage(blob);\n\n        const canvas = document.createElement('canvas');\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        const ctx = canvas.getContext('2d');\n        if (ctx === null) throw new Error('Counldn\\'t get context');\n\n        ctx.drawImage(img, 0, 0);\n        const data = ctx.getImageData(0, 0, img.width, img.height);\n\n        canvas.remove();\n\n        return data;\n    }\n\n    private async convertToPAA (blob: Blob): Promise<Blob> {\n        const data = await this.blobToImageData(blob);\n        const arr = (await affPromise).encode(data);\n        return new Blob([arr], { type: 'image/vnd.paa' });\n    }\n}\n","import { render } from \"./Done.vue?vue&type=template&id=6d6ce524&scoped=true\"\nimport script from \"./Done.vue?vue&type=script&lang=ts\"\nexport * from \"./Done.vue?vue&type=script&lang=ts\"\n\nimport \"./Done.vue?vue&type=style&index=0&id=6d6ce524&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-6d6ce524\"\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\nimport General from '../views/General.vue';\nimport CustomAdler from '../views/CustomAdler.vue';\nimport MainMenu from '../views/MainMenu.vue';\nimport Verify from '../views/Verify.vue';\nimport Done from '../views/Done.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n    {\n        path: '/:catchAll(.*)',\n        redirect: '/general'\n    },\n    {\n        path: '/general',\n        component: General\n    },\n    {\n        path: '/custom_adler',\n        component: CustomAdler\n    },\n    {\n        path: '/main_menu',\n        component: MainMenu\n    },\n    {\n        path: '/verify',\n        component: Verify\n    },\n    {\n        path: '/done',\n        component: Done\n    }\n];\n\nconst router = createRouter({\n    history: createWebHashHistory(process.env.BASE_URL),\n    routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n    state: {\n    },\n    mutations: {\n    },\n    actions: {\n    },\n    modules: {\n    }\n});\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\n\ncreateApp(App).use(store).use(router).mount('#app');\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CustomAdler.vue?vue&type=style&index=0&id=086bcdf5&lang=scss&scoped=true\""],"sourceRoot":""}